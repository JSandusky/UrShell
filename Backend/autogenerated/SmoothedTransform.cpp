//THIS FILE IS AUTOGENERATED - DO NOT MODIFY
#include "stdafx.h"
#include <Urho3D/Urho3D.h>
#include <Urho3D/Scene/Component.h>
#include <Urho3D/Container/Str.h>
#include "../MathBind.h"
#include "../ResourceRefWrapper.h"
#include "../SceneWrappers.h"
#include "../Variant.h"
#include "../StringHash.h"
#include "../UrControl.h"
#include "SmoothedTransform.h"

#include <Urho3D/Scene/SmoothedTransform.h>

namespace UrhoBackend {

SmoothedTransform::SmoothedTransform(Urho3D::SmoothedTransform* fromUrho) : Component(fromUrho) { smoothedtransform_ = fromUrho; }
SmoothedTransform::SmoothedTransform(System::IntPtr^ ptr) : SmoothedTransform((Urho3D::SmoothedTransform*)ptr->ToPointer()) { }

UrhoBackend::Vector3^ SmoothedTransform::targetPosition::get() { return gcnew UrhoBackend::Vector3(smoothedtransform_->GetTargetPosition()); }
void SmoothedTransform::targetPosition::set(UrhoBackend::Vector3^ value) { smoothedtransform_->SetTargetPosition(value->ToVector3()); }

UrhoBackend::Quaternion^ SmoothedTransform::targetRotation::get() { return gcnew UrhoBackend::Quaternion(smoothedtransform_->GetTargetRotation()); }
void SmoothedTransform::targetRotation::set(UrhoBackend::Quaternion^ value) { smoothedtransform_->SetTargetRotation(value->ToQuaternion()); }

UrhoBackend::Vector3^ SmoothedTransform::targetWorldPosition::get() { return gcnew UrhoBackend::Vector3(smoothedtransform_->GetTargetWorldPosition()); }
void SmoothedTransform::targetWorldPosition::set(UrhoBackend::Vector3^ value) { smoothedtransform_->SetTargetWorldPosition(value->ToVector3()); }

UrhoBackend::Quaternion^ SmoothedTransform::targetWorldRotation::get() { return gcnew UrhoBackend::Quaternion(smoothedtransform_->GetTargetWorldRotation()); }
void SmoothedTransform::targetWorldRotation::set(UrhoBackend::Quaternion^ value) { smoothedtransform_->SetTargetWorldRotation(value->ToQuaternion()); }

bool SmoothedTransform::inProgress::get() { return smoothedtransform_->IsInProgress(); }
void SmoothedTransform::Update(float A, float B)  {  smoothedtransform_->Update(A, B); }

}
