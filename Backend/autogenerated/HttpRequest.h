//THIS FILE IS AUTOGENERATED - DO NOT MODIFY
#pragma once

#include <Urho3D/Urho3D.h>
#include <Urho3D/Scene/Component.h>
#include "../MathBind.h"
#include "../ResourceRefWrapper.h"
#include "../SceneWrappers.h"
#include "../Variant.h"
#include "../StringHash.h"
#include "../Attributes.h"

#include "Enumerations.h"

namespace Urho3D {
    class HttpRequest;
    class IntRect;
    class IntVector2;
    class Vector2;
    class Vector3;
    class Vector4;
    class Quaternion;
    class Matrix3;
    class Matrix3x4;
    class Matrix4;
    class Color;
    class BoundingBox;
    class String;
    class StringHash;
    class Variant;
    class VariantMap;
}



namespace UrhoBackend {

    ref class BoundingBox;

    public ref class HttpRequest : public UrhoBackend::RefCounted {
    public:
        HttpRequest(Urho3D::HttpRequest* comp);
        HttpRequest(System::IntPtr^ ptr);

// Properties
        property System::String^ name { System::String^ get(); }
        property unsigned checksum { unsigned get(); }
        property unsigned position { unsigned get(); }
        property unsigned size { unsigned get(); }
        property bool eof { bool get(); }
        property System::String^ url { System::String^ get(); }
        property System::String^ verb { System::String^ get(); }
        property System::String^ error { System::String^ get(); }
        property HttpRequestState state { HttpRequestState get(); }
        property unsigned availableSize { unsigned get(); }
        property bool open { bool get(); }
// Methods
        int ReadInt();
        short ReadShort();
        signed char ReadByte();
        unsigned ReadUInt();
        unsigned short ReadUShort();
        unsigned char ReadUByte();
        bool ReadBool();
        float ReadFloat();
        UrhoBackend::IntRect^ ReadIntRect();
        UrhoBackend::IntVector2^ ReadIntVector2();
        UrhoBackend::Vector2^ ReadVector2();
        UrhoBackend::Vector3^ ReadVector3();
        UrhoBackend::Vector3^ ReadPackedVector3(float);
        UrhoBackend::Vector4^ ReadVector4();
        UrhoBackend::Quaternion^ ReadQuaternion();
        UrhoBackend::Quaternion^ ReadPackedQuaternion();
        UrhoBackend::Matrix3^ ReadMatrix3();
        UrhoBackend::Matrix3x4^ ReadMatrix3x4();
        UrhoBackend::Matrix4^ ReadMatrix4();
        UrhoBackend::Color^ ReadColor();
        BoundingBox^ ReadBoundingBox();
        System::String^ ReadString();
        System::String^ ReadFileID();
        UrhoBackend::StringHash^ ReadStringHash();
        Variant^ ReadVariant();
        UrhoBackend::VariantMap^ ReadVariantMap();
        unsigned ReadVLE();
        unsigned ReadNetID();
        System::String^ ReadLine();
        unsigned Seek(unsigned);
// Fields

        Urho3D::HttpRequest* httprequest_;
    };
}
