//THIS FILE IS AUTOGENERATED - DO NOT MODIFY
#include "stdafx.h"
#include <Urho3D/Urho3D.h>
#include <Urho3D/Scene/Component.h>
#include <Urho3D/Container/Str.h>
#include "../MathBind.h"
#include "../ResourceRefWrapper.h"
#include "../SceneWrappers.h"
#include "../Variant.h"
#include "../StringHash.h"
#include "../UrControl.h"
#include "StaticSprite2D.h"

#include <Urho3D/Urho2D/StaticSprite2D.h>
#include <Urho3D/Urho2D/Sprite2D.h>
#include "Sprite2D.h"
#include <Urho3D/Graphics/Material.h>
#include "Material.h"
#include <Urho3D/Graphics/GraphicsDefs.h>

namespace UrhoBackend {

StaticSprite2D::StaticSprite2D(Urho3D::StaticSprite2D* fromUrho) : Drawable2D(fromUrho) { staticsprite2d_ = fromUrho; }
StaticSprite2D::StaticSprite2D(System::IntPtr^ ptr) : StaticSprite2D((Urho3D::StaticSprite2D*)ptr->ToPointer()) { }

Sprite2D^ StaticSprite2D::sprite::get() { return gcnew UrhoBackend::Sprite2D(staticsprite2d_->GetSprite()); }
void StaticSprite2D::sprite::set(Sprite2D^ value) { staticsprite2d_->SetSprite(value->sprite2d_); }

BlendMode StaticSprite2D::blendMode::get() { return (UrhoBackend::BlendMode)staticsprite2d_->GetBlendMode(); }
void StaticSprite2D::blendMode::set(BlendMode value) { staticsprite2d_->SetBlendMode((Urho3D::BlendMode)value); }

bool StaticSprite2D::flipX::get() { return staticsprite2d_->GetFlipX(); }
void StaticSprite2D::flipX::set(bool value) { staticsprite2d_->SetFlipX(value); }

bool StaticSprite2D::flipY::get() { return staticsprite2d_->GetFlipY(); }
void StaticSprite2D::flipY::set(bool value) { staticsprite2d_->SetFlipY(value); }

UrhoBackend::Color^ StaticSprite2D::color::get() { return gcnew Color(staticsprite2d_->GetColor()); }
void StaticSprite2D::color::set(UrhoBackend::Color^ value) { staticsprite2d_->SetColor(value->ToColor()); }

float StaticSprite2D::alpha::get() { return staticsprite2d_->GetAlpha(); }
void StaticSprite2D::alpha::set(float value) { staticsprite2d_->SetAlpha(value); }

bool StaticSprite2D::useHotSpot::get() { return staticsprite2d_->GetUseHotSpot(); }
void StaticSprite2D::useHotSpot::set(bool value) { staticsprite2d_->SetUseHotSpot(value); }

UrhoBackend::Vector2^ StaticSprite2D::hotSpot::get() { return gcnew UrhoBackend::Vector2(staticsprite2d_->GetHotSpot()); }
void StaticSprite2D::hotSpot::set(UrhoBackend::Vector2^ value) { staticsprite2d_->SetHotSpot(value->ToVector2()); }

Material^ StaticSprite2D::customMaterial::get() { return gcnew UrhoBackend::Material(staticsprite2d_->GetCustomMaterial()); }
void StaticSprite2D::customMaterial::set(Material^ value) { staticsprite2d_->SetCustomMaterial(value->material_); }

void StaticSprite2D::SetFlip(bool A, bool B)  {  staticsprite2d_->SetFlip(A, B); }

}
