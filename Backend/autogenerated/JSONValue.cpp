//THIS FILE IS AUTOGENERATED - DO NOT MODIFY
#include "stdafx.h"
#include <Urho3D/Urho3D.h>
#include <Urho3D/Scene/Component.h>
#include <Urho3D/Container/Str.h>
#include "../MathBind.h"
#include "../ResourceRefWrapper.h"
#include "../SceneWrappers.h"
#include "../Variant.h"
#include "../StringHash.h"
#include "../UrControl.h"
#include "JSONValue.h"

#include <Urho3D/Resource/JSONValue.h>
#include <Urho3D/Resource/JSONValue.h>

namespace UrhoBackend {

JSONValue::JSONValue(Urho3D::JSONValue fromUrho) { jsonvalue_ = new Urho3D::JSONValue(); *jsonvalue_ = fromUrho; }
JSONValue::JSONValue(System::IntPtr^ ptr) : JSONValue(*((Urho3D::JSONValue*)ptr->ToPointer())) { }
JSONValue::~JSONValue() { delete jsonvalue_; }
bool JSONValue::isNull::get() { return jsonvalue_->IsNull(); }
bool JSONValue::notNull::get() { return jsonvalue_->NotNull(); }
bool JSONValue::isObject::get() { return jsonvalue_->IsObject(); }
bool JSONValue::isArray::get() { return jsonvalue_->IsArray(); }
unsigned JSONValue::size::get() { return jsonvalue_->GetSize(); }
JSONValue^ JSONValue::opAssign(JSONValue^ A)  { return  gcnew UrhoBackend::JSONValue(jsonvalue_->operator =(*A->jsonvalue_)); }

JSONValue^ JSONValue::CreateChild(System::String^ A, JSONValueType valueType)  { return  gcnew UrhoBackend::JSONValue(jsonvalue_->CreateChild(Urho3D::String(ToCString(A)), (Urho3D::JSONValueType)valueType)); }

JSONValue^ JSONValue::GetChild(System::String^ A, JSONValueType valueType)  { return  gcnew UrhoBackend::JSONValue(jsonvalue_->GetChild(Urho3D::String(ToCString(A)), (Urho3D::JSONValueType)valueType)); }

void JSONValue::SetInt(System::String^ A, int B)  {  jsonvalue_->SetInt(Urho3D::String(ToCString(A)), B); }

void JSONValue::SetBool(System::String^ A, bool B)  {  jsonvalue_->SetBool(Urho3D::String(ToCString(A)), B); }

void JSONValue::SetFloat(System::String^ A, float B)  {  jsonvalue_->SetFloat(Urho3D::String(ToCString(A)), B); }

void JSONValue::SetVector2(System::String^ A, UrhoBackend::Vector2^ B)  {  jsonvalue_->SetVector2(Urho3D::String(ToCString(A)), B->ToVector2()); }

void JSONValue::SetVector3(System::String^ A, UrhoBackend::Vector3^ B)  {  jsonvalue_->SetVector3(Urho3D::String(ToCString(A)), B->ToVector3()); }

void JSONValue::SetVector4(System::String^ A, UrhoBackend::Vector4^ B)  {  jsonvalue_->SetVector4(Urho3D::String(ToCString(A)), B->ToVector4()); }

void JSONValue::SetVectorVariant(System::String^ A, Variant^ B)  {  jsonvalue_->SetVectorVariant(Urho3D::String(ToCString(A)), *B->variant_); }

void JSONValue::SetQuaternion(System::String^ A, UrhoBackend::Quaternion^ B)  {  jsonvalue_->SetQuaternion(Urho3D::String(ToCString(A)), B->ToQuaternion()); }

void JSONValue::SetColor(System::String^ A, UrhoBackend::Color^ B)  {  jsonvalue_->SetColor(Urho3D::String(ToCString(A)), B->ToColor()); }

void JSONValue::SetString(System::String^ A, System::String^ B)  {  jsonvalue_->SetString(Urho3D::String(ToCString(A)), Urho3D::String(ToCString(B))); }

void JSONValue::SetResourceRef(System::String^ A, ResourceRef^ B)  {  jsonvalue_->SetResourceRef(Urho3D::String(ToCString(A)), *B->ref_); }

void JSONValue::SetResourceRefList(System::String^ A, ResourceRefList^ B)  {  jsonvalue_->SetResourceRefList(Urho3D::String(ToCString(A)), *B->refList_); }

void JSONValue::SetIntRect(System::String^ A, UrhoBackend::IntRect^ B)  {  jsonvalue_->SetIntRect(Urho3D::String(ToCString(A)), B->ToIntRect()); }

void JSONValue::SetIntVector2(System::String^ A, UrhoBackend::IntVector2^ B)  {  jsonvalue_->SetIntVector2(Urho3D::String(ToCString(A)), B->ToIntVector2()); }

void JSONValue::SetMatrix3(System::String^ A, UrhoBackend::Matrix3^ B)  {  jsonvalue_->SetMatrix3(Urho3D::String(ToCString(A)), B->ToMatrix3()); }

void JSONValue::SetMatrix3x4(System::String^ A, UrhoBackend::Matrix3x4^ B)  {  jsonvalue_->SetMatrix3x4(Urho3D::String(ToCString(A)), B->ToMatrix3x4()); }

void JSONValue::SetMatrix4(System::String^ A, UrhoBackend::Matrix4^ B)  {  jsonvalue_->SetMatrix4(Urho3D::String(ToCString(A)), B->ToMatrix4()); }

void JSONValue::SetVariant(System::String^ A, Variant^ B)  {  jsonvalue_->SetVariant(Urho3D::String(ToCString(A)), *B->variant_); }

void JSONValue::SetVariantValue(System::String^ A, Variant^ B)  {  jsonvalue_->SetVariantValue(Urho3D::String(ToCString(A)), *B->variant_); }

int JSONValue::GetInt(System::String^ A)  { return  jsonvalue_->GetInt(Urho3D::String(ToCString(A))); }

bool JSONValue::GetBool(System::String^ A)  { return  jsonvalue_->GetBool(Urho3D::String(ToCString(A))); }

float JSONValue::GetFloat(System::String^ A)  { return  jsonvalue_->GetFloat(Urho3D::String(ToCString(A))); }

UrhoBackend::Vector2^ JSONValue::GetVector2(System::String^ A)  { return  gcnew UrhoBackend::Vector2(jsonvalue_->GetVector2(Urho3D::String(ToCString(A)))); }

UrhoBackend::Vector3^ JSONValue::GetVector3(System::String^ A)  { return  gcnew UrhoBackend::Vector3(jsonvalue_->GetVector3(Urho3D::String(ToCString(A)))); }

UrhoBackend::Vector4^ JSONValue::GetVector4(System::String^ A)  { return  gcnew UrhoBackend::Vector4(jsonvalue_->GetVector4(Urho3D::String(ToCString(A)))); }

Variant^ JSONValue::GetVectorVariant(System::String^ A)  { return  gcnew UrhoBackend::Variant(jsonvalue_->GetVectorVariant(Urho3D::String(ToCString(A)))); }

UrhoBackend::Quaternion^ JSONValue::GetQuaternion(System::String^ A)  { return  gcnew UrhoBackend::Quaternion(jsonvalue_->GetQuaternion(Urho3D::String(ToCString(A)))); }

UrhoBackend::Color^ JSONValue::GetColor(System::String^ A)  { return  gcnew Color(jsonvalue_->GetColor(Urho3D::String(ToCString(A)))); }

System::String^ JSONValue::GetString(System::String^ A)  { return  gcnew System::String(jsonvalue_->GetString(Urho3D::String(ToCString(A))).CString()); }

ResourceRef^ JSONValue::GetResourceRef(System::String^ A)  { return  gcnew UrhoBackend::ResourceRef(jsonvalue_->GetResourceRef(Urho3D::String(ToCString(A)))); }

ResourceRefList^ JSONValue::GetResourceRefList(System::String^ A)  { return  gcnew UrhoBackend::ResourceRefListjsonvalue_->GetResourceRefList(Urho3D::String(ToCString(A)))); }

UrhoBackend::IntRect^ JSONValue::GetIntRect(System::String^ A)  { return  gcnew UrhoBackend::IntRect(jsonvalue_->GetIntRect(Urho3D::String(ToCString(A)))); }

UrhoBackend::IntVector2^ JSONValue::GetIntVector2(System::String^ A)  { return  gcnew UrhoBackend::IntVector2(jsonvalue_->GetIntVector2(Urho3D::String(ToCString(A)))); }

UrhoBackend::Matrix3^ JSONValue::GetMatrix3(System::String^ A)  { return  gcnew UrhoBackend::Matrix3(jsonvalue_->GetMatrix3(Urho3D::String(ToCString(A)))); }

UrhoBackend::Matrix3x4^ JSONValue::GetMatrix3x4(System::String^ A)  { return  gcnew UrhoBackend::Matrix3x4(jsonvalue_->GetMatrix3x4(Urho3D::String(ToCString(A)))); }

UrhoBackend::Matrix4^ JSONValue::GetMatrix4(System::String^ A)  { return  gcnew UrhoBackend::Matrix4(jsonvalue_->GetMatrix4(Urho3D::String(ToCString(A)))); }

Variant^ JSONValue::GetVariant(System::String^ A)  { return  gcnew UrhoBackend::Variant(jsonvalue_->GetVariant(Urho3D::String(ToCString(A)))); }

Variant^ JSONValue::GetVariantValue(System::String^ A, VariantType type B)  { return  gcnew UrhoBackend::Variant(jsonvalue_->GetVariantValue(Urho3D::String(ToCString(A)), B)); }

JSONValue^ JSONValue::CreateChild(JSONValueType valueType)  { return  gcnew UrhoBackend::JSONValue(jsonvalue_->CreateChild((Urho3D::JSONValueType)valueType)); }

JSONValue^ JSONValue::GetChild(unsigned A, JSONValueType valueType)  { return  gcnew UrhoBackend::JSONValue(jsonvalue_->GetChild(A, (Urho3D::JSONValueType)valueType)); }

void JSONValue::AddInt(int A)  {  jsonvalue_->AddInt(A); }

void JSONValue::AddBool(bool A)  {  jsonvalue_->AddBool(A); }

void JSONValue::AddFloat(float A)  {  jsonvalue_->AddFloat(A); }

void JSONValue::AddVector2(UrhoBackend::Vector2^ A)  {  jsonvalue_->AddVector2(A->ToVector2()); }

void JSONValue::AddVector3(UrhoBackend::Vector3^ A)  {  jsonvalue_->AddVector3(A->ToVector3()); }

void JSONValue::AddVector4(UrhoBackend::Vector4^ A)  {  jsonvalue_->AddVector4(A->ToVector4()); }

void JSONValue::AddVectorVariant(Variant^ A)  {  jsonvalue_->AddVectorVariant(*A->variant_); }

void JSONValue::AddQuaternion(UrhoBackend::Quaternion^ A)  {  jsonvalue_->AddQuaternion(A->ToQuaternion()); }

void JSONValue::AddColor(UrhoBackend::Color^ A)  {  jsonvalue_->AddColor(A->ToColor()); }

void JSONValue::AddString(System::String^ A)  {  jsonvalue_->AddString(Urho3D::String(ToCString(A))); }

void JSONValue::AddResourceRef(ResourceRef^ A)  {  jsonvalue_->AddResourceRef(*A->ref_); }

void JSONValue::AddResourceRefList(ResourceRefList^ A)  {  jsonvalue_->AddResourceRefList(*A->refList_); }

void JSONValue::AddIntRect(UrhoBackend::IntRect^ A)  {  jsonvalue_->AddIntRect(A->ToIntRect()); }

void JSONValue::AddIntVector2(UrhoBackend::IntVector2^ A)  {  jsonvalue_->AddIntVector2(A->ToIntVector2()); }

void JSONValue::AddMatrix3(UrhoBackend::Matrix3^ A)  {  jsonvalue_->AddMatrix3(A->ToMatrix3()); }

void JSONValue::AddMatrix3x4(UrhoBackend::Matrix3x4^ A)  {  jsonvalue_->AddMatrix3x4(A->ToMatrix3x4()); }

void JSONValue::AddMatrix4(UrhoBackend::Matrix4^ A)  {  jsonvalue_->AddMatrix4(A->ToMatrix4()); }

void JSONValue::AddVariant(Variant^ A)  {  jsonvalue_->AddVariant(*A->variant_); }

void JSONValue::AddVariantValue(Variant^ A)  {  jsonvalue_->AddVariantValue(*A->variant_); }

int JSONValue::GetInt(unsigned A)  { return  jsonvalue_->GetInt(A); }

bool JSONValue::GetBool(unsigned A)  { return  jsonvalue_->GetBool(A); }

float JSONValue::GetFloat(unsigned A)  { return  jsonvalue_->GetFloat(A); }

UrhoBackend::Vector2^ JSONValue::GetVector2(unsigned A)  { return  gcnew UrhoBackend::Vector2(jsonvalue_->GetVector2(A)); }

UrhoBackend::Vector3^ JSONValue::GetVector3(unsigned A)  { return  gcnew UrhoBackend::Vector3(jsonvalue_->GetVector3(A)); }

UrhoBackend::Vector4^ JSONValue::GetVector4(unsigned A)  { return  gcnew UrhoBackend::Vector4(jsonvalue_->GetVector4(A)); }

Variant^ JSONValue::GetVectorVariant(unsigned A)  { return  gcnew UrhoBackend::Variant(jsonvalue_->GetVectorVariant(A)); }

UrhoBackend::Quaternion^ JSONValue::GetQuaternion(unsigned A)  { return  gcnew UrhoBackend::Quaternion(jsonvalue_->GetQuaternion(A)); }

UrhoBackend::Color^ JSONValue::GetColor(unsigned A)  { return  gcnew Color(jsonvalue_->GetColor(A)); }

System::String^ JSONValue::GetString(unsigned A)  { return  gcnew System::String(jsonvalue_->GetString(A).CString()); }

ResourceRef^ JSONValue::GetResourceRef(unsigned A)  { return  gcnew UrhoBackend::ResourceRef(jsonvalue_->GetResourceRef(A)); }

ResourceRefList^ JSONValue::GetResourceRefList(unsigned A)  { return  gcnew UrhoBackend::ResourceRefListjsonvalue_->GetResourceRefList(A)); }

UrhoBackend::IntRect^ JSONValue::GetIntRect(unsigned A)  { return  gcnew UrhoBackend::IntRect(jsonvalue_->GetIntRect(A)); }

UrhoBackend::IntVector2^ JSONValue::GetIntVector2(unsigned A)  { return  gcnew UrhoBackend::IntVector2(jsonvalue_->GetIntVector2(A)); }

UrhoBackend::Matrix3^ JSONValue::GetMatrix3(unsigned A)  { return  gcnew UrhoBackend::Matrix3(jsonvalue_->GetMatrix3(A)); }

UrhoBackend::Matrix3x4^ JSONValue::GetMatrix3x4(unsigned A)  { return  gcnew UrhoBackend::Matrix3x4(jsonvalue_->GetMatrix3x4(A)); }

UrhoBackend::Matrix4^ JSONValue::GetMatrix4(unsigned A)  { return  gcnew UrhoBackend::Matrix4(jsonvalue_->GetMatrix4(A)); }

Variant^ JSONValue::GetVariant(unsigned A)  { return  gcnew UrhoBackend::Variant(jsonvalue_->GetVariant(A)); }

Variant^ JSONValue::GetVariantValue(unsigned A, VariantType type B)  { return  gcnew UrhoBackend::Variant(jsonvalue_->GetVariantValue(A, B)); }

}
