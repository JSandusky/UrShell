//THIS FILE IS AUTOGENERATED - DO NOT MODIFY
#pragma once

#include <Urho3D/Urho3D.h>
#include <Urho3D/Scene/Component.h>
#include "../MathBind.h"
#include "../ResourceRefWrapper.h"
#include "../SceneWrappers.h"
#include "../Variant.h"
#include "../StringHash.h"
#include "../Attributes.h"

#include "Enumerations.h"

namespace Urho3D {
    class RigidBody2D;
    class Vector2;
}



namespace UrhoBackend {


    public ref class RigidBody2D : public UrhoBackend::Component {
    public:
        RigidBody2D(Urho3D::RigidBody2D* comp);
        RigidBody2D(System::IntPtr^ ptr);

// Properties
        property BodyType2D bodyType { BodyType2D get(); void set(BodyType2D); }
        property float mass { float get(); void set(float); }
        property float inertia { float get(); void set(float); }
        property UrhoBackend::Vector2^ massCenter { UrhoBackend::Vector2^ get(); void set(UrhoBackend::Vector2^); }
        property bool useFixtureMass { bool get(); void set(bool); }
        property float linearDamping { float get(); void set(float); }
        property float angularDamping { float get(); void set(float); }
        property bool allowSleep { bool get(); void set(bool); }
        property bool fixedRotation { bool get(); void set(bool); }
        property bool bullet { bool get(); void set(bool); }
        property float gravityScale { float get(); void set(float); }
        property bool awake { bool get(); void set(bool); }
        property UrhoBackend::Vector2^ linearVelocity { UrhoBackend::Vector2^ get(); void set(UrhoBackend::Vector2^); }
// Methods
        void ApplyForce(UrhoBackend::Vector2^, UrhoBackend::Vector2^, bool);
        void ApplyForceToCenter(UrhoBackend::Vector2^, bool);
        void ApplyTorque(float torque, bool);
        void ApplyLinearImpulse(UrhoBackend::Vector2^, UrhoBackend::Vector2^, bool);
        void ApplyAngularImpulse(float, bool);
// Fields

        Urho3D::RigidBody2D* rigidbody2d_;
    };
}
