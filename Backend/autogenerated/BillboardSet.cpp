//THIS FILE IS AUTOGENERATED - DO NOT MODIFY
#include "stdafx.h"
#include <Urho3D/Urho3D.h>
#include <Urho3D/Scene/Component.h>
#include <Urho3D/Container/Str.h>
#include "../MathBind.h"
#include "../ResourceRefWrapper.h"
#include "../SceneWrappers.h"
#include "../Variant.h"
#include "../StringHash.h"
#include "../UrControl.h"
#include "BillboardSet.h"

#include <Urho3D/Graphics/BillboardSet.h>
#include <Urho3D/Graphics/Material.h>
#include "Material.h"
#include <Urho3D/Graphics/BillboardSet.h>
#include "Billboard.h"
#include <Urho3D/Graphics/Zone.h>
#include "Zone.h"
#include <Urho3D/Graphics/GraphicsDefs.h>

namespace UrhoBackend {

BillboardSet::BillboardSet(Urho3D::BillboardSet* fromUrho) : Drawable(fromUrho) { billboardset_ = fromUrho; }
BillboardSet::BillboardSet(System::IntPtr^ ptr) : BillboardSet((Urho3D::BillboardSet*)ptr->ToPointer()) { }

Material^ BillboardSet::material::get() { return gcnew UrhoBackend::Material(billboardset_->GetMaterial()); }
void BillboardSet::material::set(Material^ value) { billboardset_->SetMaterial(value->material_); }

unsigned BillboardSet::numBillboards::get() { return billboardset_->GetNumBillboards(); }
void BillboardSet::numBillboards::set(unsigned value) { billboardset_->SetNumBillboards(value); }

bool BillboardSet::relative::get() { return billboardset_->IsRelative(); }
void BillboardSet::relative::set(bool value) { billboardset_->SetRelative(value); }

bool BillboardSet::sorted::get() { return billboardset_->IsSorted(); }
void BillboardSet::sorted::set(bool value) { billboardset_->SetSorted(value); }

bool BillboardSet::scaled::get() { return billboardset_->IsScaled(); }
void BillboardSet::scaled::set(bool value) { billboardset_->SetScaled(value); }

FaceCameraMode BillboardSet::faceCameraMode::get() { return (UrhoBackend::FaceCameraMode)billboardset_->GetFaceCameraMode(); }
void BillboardSet::faceCameraMode::set(FaceCameraMode value) { billboardset_->SetFaceCameraMode((Urho3D::FaceCameraMode)value); }

float BillboardSet::animationLodBias::get() { return billboardset_->GetAnimationLodBias(); }
void BillboardSet::animationLodBias::set(float value) { billboardset_->SetAnimationLodBias(value); }

Billboard^ BillboardSet::billboards::get(unsigned A) { return gcnew UrhoBackend::Billboard(billboardset_->GetBillboard(A)); }

Zone^ BillboardSet::zone::get() { return gcnew UrhoBackend::Zone(billboardset_->GetZone()); }
void BillboardSet::Commit()  {  billboardset_->Commit(); }

}
