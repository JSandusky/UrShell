//THIS FILE IS AUTOGENERATED - DO NOT MODIFY
#include "stdafx.h"
#include <Urho3D/Urho3D.h>
#include <Urho3D/Scene/Component.h>
#include <Urho3D/Container/Str.h>
#include "../MathBind.h"
#include "../ResourceRefWrapper.h"
#include "../SceneWrappers.h"
#include "../Variant.h"
#include "../StringHash.h"
#include "../UrControl.h"
#include "PhysicsWorld2D.h"

#include <Urho3D/Urho2D/PhysicsWorld2D.h>
#include <Urho3D/Urho2D/RigidBody2D.h>
#include "RigidBody2D.h"

namespace UrhoBackend {

PhysicsWorld2D::PhysicsWorld2D(Urho3D::PhysicsWorld2D* fromUrho) : Component(fromUrho) { physicsworld2d_ = fromUrho; }
PhysicsWorld2D::PhysicsWorld2D(System::IntPtr^ ptr) : PhysicsWorld2D((Urho3D::PhysicsWorld2D*)ptr->ToPointer()) { }

bool PhysicsWorld2D::drawShape::get() { return physicsworld2d_->GetDrawShape(); }
void PhysicsWorld2D::drawShape::set(bool value) { physicsworld2d_->SetDrawShape(value); }

bool PhysicsWorld2D::drawJoint::get() { return physicsworld2d_->GetDrawJoint(); }
void PhysicsWorld2D::drawJoint::set(bool value) { physicsworld2d_->SetDrawJoint(value); }

bool PhysicsWorld2D::drawAabb::get() { return physicsworld2d_->GetDrawAabb(); }
void PhysicsWorld2D::drawAabb::set(bool value) { physicsworld2d_->SetDrawAabb(value); }

bool PhysicsWorld2D::drawPair::get() { return physicsworld2d_->GetDrawPair(); }
void PhysicsWorld2D::drawPair::set(bool value) { physicsworld2d_->SetDrawPair(value); }

bool PhysicsWorld2D::drawCenterOfMass::get() { return physicsworld2d_->GetDrawCenterOfMass(); }
void PhysicsWorld2D::drawCenterOfMass::set(bool value) { physicsworld2d_->SetDrawCenterOfMass(value); }

bool PhysicsWorld2D::allowSleeping::get() { return physicsworld2d_->GetAllowSleeping(); }
void PhysicsWorld2D::allowSleeping::set(bool value) { physicsworld2d_->SetAllowSleeping(value); }

bool PhysicsWorld2D::warmStarting::get() { return physicsworld2d_->GetWarmStarting(); }
void PhysicsWorld2D::warmStarting::set(bool value) { physicsworld2d_->SetWarmStarting(value); }

bool PhysicsWorld2D::continuousPhysics::get() { return physicsworld2d_->GetContinuousPhysics(); }
void PhysicsWorld2D::continuousPhysics::set(bool value) { physicsworld2d_->SetContinuousPhysics(value); }

bool PhysicsWorld2D::subStepping::get() { return physicsworld2d_->GetSubStepping(); }
void PhysicsWorld2D::subStepping::set(bool value) { physicsworld2d_->SetSubStepping(value); }

UrhoBackend::Vector2^ PhysicsWorld2D::gravity::get() { return gcnew UrhoBackend::Vector2(physicsworld2d_->GetGravity()); }
void PhysicsWorld2D::gravity::set(UrhoBackend::Vector2^ value) { physicsworld2d_->SetGravity(value->ToVector2()); }

bool PhysicsWorld2D::autoClearForces::get() { return physicsworld2d_->GetAutoClearForces(); }
void PhysicsWorld2D::autoClearForces::set(bool value) { physicsworld2d_->SetAutoClearForces(value); }

unsigned PhysicsWorld2D::velocityIterations::get() { return physicsworld2d_->GetVelocityIterations(); }
void PhysicsWorld2D::velocityIterations::set(unsigned value) { physicsworld2d_->SetVelocityIterations(value); }

unsigned PhysicsWorld2D::positionIterations::get() { return physicsworld2d_->GetPositionIterations(); }
void PhysicsWorld2D::positionIterations::set(unsigned value) { physicsworld2d_->SetPositionIterations(value); }

RigidBody2D^ PhysicsWorld2D::GetRigidBody(UrhoBackend::Vector2^ A, unsigned collisionMask)  { return  gcnew UrhoBackend::RigidBody2D(physicsworld2d_->GetRigidBody(A->ToVector2(), collisionMask)); }

RigidBody2D^ PhysicsWorld2D::GetRigidBody(int A, int B, unsigned collisionMask)  { return  gcnew UrhoBackend::RigidBody2D(physicsworld2d_->GetRigidBody(A, B, collisionMask)); }

}
