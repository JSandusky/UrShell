//THIS FILE IS AUTOGENERATED - DO NOT MODIFY
#include "stdafx.h"
#include <Urho3D/Urho3D.h>
#include <Urho3D/Scene/Component.h>
#include <Urho3D/Container/Str.h>
#include "../MathBind.h"
#include "../ResourceRefWrapper.h"
#include "../SceneWrappers.h"
#include "../Variant.h"
#include "../StringHash.h"
#include "../UrControl.h"
#include "ConstraintWheel2D.h"

#include <Urho3D/Urho2D/ConstraintWheel2D.h>

namespace UrhoBackend {

ConstraintWheel2D::ConstraintWheel2D(Urho3D::ConstraintWheel2D* fromUrho) : Constraint2D(fromUrho) { constraintwheel2d_ = fromUrho; }
ConstraintWheel2D::ConstraintWheel2D(System::IntPtr^ ptr) : ConstraintWheel2D((Urho3D::ConstraintWheel2D*)ptr->ToPointer()) { }

UrhoBackend::Vector2^ ConstraintWheel2D::anchor::get() { return gcnew UrhoBackend::Vector2(constraintwheel2d_->GetAnchor()); }
void ConstraintWheel2D::anchor::set(UrhoBackend::Vector2^ value) { constraintwheel2d_->SetAnchor(value->ToVector2()); }

UrhoBackend::Vector2^ ConstraintWheel2D::axis::get() { return gcnew UrhoBackend::Vector2(constraintwheel2d_->GetAxis()); }
void ConstraintWheel2D::axis::set(UrhoBackend::Vector2^ value) { constraintwheel2d_->SetAxis(value->ToVector2()); }

bool ConstraintWheel2D::enableMotor::get() { return constraintwheel2d_->GetEnableMotor(); }
void ConstraintWheel2D::enableMotor::set(bool value) { constraintwheel2d_->SetEnableMotor(value); }

float ConstraintWheel2D::maxMotorTorque::get() { return constraintwheel2d_->GetMaxMotorTorque(); }
void ConstraintWheel2D::maxMotorTorque::set(float value) { constraintwheel2d_->SetMaxMotorTorque(value); }

float ConstraintWheel2D::motorSpeed::get() { return constraintwheel2d_->GetMotorSpeed(); }
void ConstraintWheel2D::motorSpeed::set(float value) { constraintwheel2d_->SetMotorSpeed(value); }

float ConstraintWheel2D::frequencyHz::get() { return constraintwheel2d_->GetFrequencyHz(); }
void ConstraintWheel2D::frequencyHz::set(float value) { constraintwheel2d_->SetFrequencyHz(value); }

float ConstraintWheel2D::dampingRatio::get() { return constraintwheel2d_->GetDampingRatio(); }
void ConstraintWheel2D::dampingRatio::set(float value) { constraintwheel2d_->SetDampingRatio(value); }

}
