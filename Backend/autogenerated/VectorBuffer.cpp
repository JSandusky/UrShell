//THIS FILE IS AUTOGENERATED - DO NOT MODIFY
#include "stdafx.h"
#include <Urho3D/Urho3D.h>
#include <Urho3D/Scene/Component.h>
#include <Urho3D/Container/Str.h>
#include "../MathBind.h"
#include "../ResourceRefWrapper.h"
#include "../SceneWrappers.h"
#include "../Variant.h"
#include "../StringHash.h"
#include "../UrControl.h"
#include "VectorBuffer.h"
#include "BoundingBox.h"

#include <Urho3D/IO/VectorBuffer.h>
#include <Urho3D/Math/BoundingBox.h>

namespace UrhoBackend {

VectorBuffer::VectorBuffer(Urho3D::VectorBuffer* fromUrho) { vectorbuffer_ = new Urho3D::VectorBuffer(); *vectorbuffer_ = *fromUrho; }
VectorBuffer::VectorBuffer(System::IntPtr^ ptr) : VectorBuffer(((Urho3D::VectorBuffer*)ptr->ToPointer())) { }

VectorBuffer::VectorBuffer(System::String^ string)
{
    const char* str = ToCString(string);
    vectorbuffer_ = new Urho3D::VectorBuffer(str, string->Length);
}

VectorBuffer::~VectorBuffer() { delete vectorbuffer_; }
System::String^ VectorBuffer::name::get() { return gcnew System::String(vectorbuffer_->GetName().CString()); }
unsigned VectorBuffer::checksum::get() { return vectorbuffer_->GetChecksum(); }
unsigned VectorBuffer::position::get() { return vectorbuffer_->GetPosition(); }
unsigned VectorBuffer::size::get() { return vectorbuffer_->GetSize(); }
bool VectorBuffer::eof::get() { return vectorbuffer_->IsEof(); }
VectorBuffer^ VectorBuffer::opAssign(VectorBuffer^ A)  { vectorbuffer_->operator =(*A->vectorbuffer_); return this; }

void VectorBuffer::Clear()  {  vectorbuffer_->Clear(); }

void VectorBuffer::Resize(unsigned A)  {  vectorbuffer_->Resize(A); }

bool VectorBuffer::WriteInt(int A)  { return  vectorbuffer_->WriteInt(A); }

bool VectorBuffer::WriteShort(short A)  { return  vectorbuffer_->WriteShort(A); }

bool VectorBuffer::WriteByte(char A)  { return  vectorbuffer_->WriteByte(A); }

bool VectorBuffer::WriteUInt(unsigned A)  { return  vectorbuffer_->WriteUInt(A); }

bool VectorBuffer::WriteUShort(unsigned short A)  { return  vectorbuffer_->WriteUShort(A); }

bool VectorBuffer::WriteUByte(unsigned char A)  { return  vectorbuffer_->WriteUByte(A); }

bool VectorBuffer::WriteBool(bool A)  { return  vectorbuffer_->WriteBool(A); }

bool VectorBuffer::WriteFloat(float A)  { return  vectorbuffer_->WriteFloat(A); }

bool VectorBuffer::WriteIntRect(UrhoBackend::IntRect^ A)  { return  vectorbuffer_->WriteIntRect(A->ToIntRect()); }

bool VectorBuffer::WriteIntVector2(UrhoBackend::IntVector2^ A)  { return  vectorbuffer_->WriteIntVector2(A->ToIntVector2()); }

bool VectorBuffer::WriteVector2(UrhoBackend::Vector2^ A)  { return  vectorbuffer_->WriteVector2(A->ToVector2()); }

bool VectorBuffer::WriteVector3(UrhoBackend::Vector3^ A)  { return  vectorbuffer_->WriteVector3(A->ToVector3()); }

bool VectorBuffer::WritePackedVector3(UrhoBackend::Vector3^ A, float B)  { return  vectorbuffer_->WritePackedVector3(A->ToVector3(), B); }

bool VectorBuffer::WriteVector4(UrhoBackend::Vector4^ A)  { return  vectorbuffer_->WriteVector4(A->ToVector4()); }

bool VectorBuffer::WriteQuaternion(UrhoBackend::Quaternion^ A)  { return  vectorbuffer_->WriteQuaternion(A->ToQuaternion()); }

bool VectorBuffer::WritePackedQuaternion(UrhoBackend::Quaternion^ A)  { return  vectorbuffer_->WritePackedQuaternion(A->ToQuaternion()); }

bool VectorBuffer::WriteMatrix3(UrhoBackend::Matrix3^ A)  { return  vectorbuffer_->WriteMatrix3(A->ToMatrix3()); }

bool VectorBuffer::WriteMatrix3x4(UrhoBackend::Matrix3x4^ A)  { return  vectorbuffer_->WriteMatrix3x4(A->ToMatrix3x4()); }

bool VectorBuffer::WriteMatrix4(UrhoBackend::Matrix4^ A)  { return  vectorbuffer_->WriteMatrix4(A->ToMatrix4()); }

bool VectorBuffer::WriteColor(UrhoBackend::Color^ A)  { return  vectorbuffer_->WriteColor(A->ToColor()); }

bool VectorBuffer::WriteBoundingBox(BoundingBox^ A)  { return  vectorbuffer_->WriteBoundingBox(*A->boundingbox_); }

bool VectorBuffer::WriteString(System::String^ A)  { return  vectorbuffer_->WriteString(Urho3D::String(ToCString(A))); }

bool VectorBuffer::WriteFileID(System::String^ A)  { return  vectorbuffer_->WriteFileID(Urho3D::String(ToCString(A))); }

bool VectorBuffer::WriteStringHash(UrhoBackend::StringHash^ A)  { return  vectorbuffer_->WriteStringHash(A->ToStringHash()); }

bool VectorBuffer::WriteVariant(Variant^ A)  { return  vectorbuffer_->WriteVariant(*A->variant_); }

bool VectorBuffer::WriteVariantMap(UrhoBackend::VariantMap^ A)  { return  vectorbuffer_->WriteVariantMap(*A->map_); }

bool VectorBuffer::WriteVLE(unsigned A)  { return  vectorbuffer_->WriteVLE(A); }

bool VectorBuffer::WriteNetID(unsigned A)  { return  vectorbuffer_->WriteNetID(A); }

bool VectorBuffer::WriteLine(System::String^ A)  { return  vectorbuffer_->WriteLine(Urho3D::String(ToCString(A))); }

int VectorBuffer::ReadInt()  { return  vectorbuffer_->ReadInt(); }

short VectorBuffer::ReadShort()  { return  vectorbuffer_->ReadShort(); }

signed char VectorBuffer::ReadByte()  { return  vectorbuffer_->ReadByte(); }

unsigned VectorBuffer::ReadUInt()  { return  vectorbuffer_->ReadUInt(); }

unsigned short VectorBuffer::ReadUShort()  { return  vectorbuffer_->ReadUShort(); }

unsigned char VectorBuffer::ReadUByte()  { return  vectorbuffer_->ReadUByte(); }

bool VectorBuffer::ReadBool()  { return  vectorbuffer_->ReadBool(); }

float VectorBuffer::ReadFloat()  { return  vectorbuffer_->ReadFloat(); }

UrhoBackend::IntRect^ VectorBuffer::ReadIntRect()  { return  gcnew UrhoBackend::IntRect(vectorbuffer_->ReadIntRect()); }

UrhoBackend::IntVector2^ VectorBuffer::ReadIntVector2()  { return  gcnew UrhoBackend::IntVector2(vectorbuffer_->ReadIntVector2()); }

UrhoBackend::Vector2^ VectorBuffer::ReadVector2()  { return  gcnew UrhoBackend::Vector2(vectorbuffer_->ReadVector2()); }

UrhoBackend::Vector3^ VectorBuffer::ReadVector3()  { return  gcnew UrhoBackend::Vector3(vectorbuffer_->ReadVector3()); }

UrhoBackend::Vector3^ VectorBuffer::ReadPackedVector3(float A)  { return  gcnew UrhoBackend::Vector3(vectorbuffer_->ReadPackedVector3(A)); }

UrhoBackend::Vector4^ VectorBuffer::ReadVector4()  { return  gcnew UrhoBackend::Vector4(vectorbuffer_->ReadVector4()); }

UrhoBackend::Quaternion^ VectorBuffer::ReadQuaternion()  { return  gcnew UrhoBackend::Quaternion(vectorbuffer_->ReadQuaternion()); }

UrhoBackend::Quaternion^ VectorBuffer::ReadPackedQuaternion()  { return  gcnew UrhoBackend::Quaternion(vectorbuffer_->ReadPackedQuaternion()); }

UrhoBackend::Matrix3^ VectorBuffer::ReadMatrix3()  { return  gcnew UrhoBackend::Matrix3(vectorbuffer_->ReadMatrix3()); }

UrhoBackend::Matrix3x4^ VectorBuffer::ReadMatrix3x4()  { return  gcnew UrhoBackend::Matrix3x4(vectorbuffer_->ReadMatrix3x4()); }

UrhoBackend::Matrix4^ VectorBuffer::ReadMatrix4()  { return  gcnew UrhoBackend::Matrix4(vectorbuffer_->ReadMatrix4()); }

UrhoBackend::Color^ VectorBuffer::ReadColor()  { return  gcnew Color(vectorbuffer_->ReadColor()); }

BoundingBox^ VectorBuffer::ReadBoundingBox()  { return  gcnew UrhoBackend::BoundingBox(vectorbuffer_->ReadBoundingBox()); }

System::String^ VectorBuffer::ReadString()  { return  gcnew System::String(vectorbuffer_->ReadString().CString()); }

System::String^ VectorBuffer::ReadFileID()  { return  gcnew System::String(vectorbuffer_->ReadFileID().CString()); }

UrhoBackend::StringHash^ VectorBuffer::ReadStringHash()  { return  gcnew UrhoBackend::StringHash(vectorbuffer_->ReadStringHash()); }

Variant^ VectorBuffer::ReadVariant()  { return  gcnew UrhoBackend::Variant(vectorbuffer_->ReadVariant()); }

UrhoBackend::VariantMap^ VectorBuffer::ReadVariantMap()  { return  gcnew UrhoBackend::VariantMap(vectorbuffer_->ReadVariantMap()); }

unsigned VectorBuffer::ReadVLE()  { return  vectorbuffer_->ReadVLE(); }

unsigned VectorBuffer::ReadNetID()  { return  vectorbuffer_->ReadNetID(); }

System::String^ VectorBuffer::ReadLine()  { return  gcnew System::String(vectorbuffer_->ReadLine().CString()); }

unsigned VectorBuffer::Seek(unsigned A)  { return  vectorbuffer_->Seek(A); }

}
