//THIS FILE IS AUTOGENERATED - DO NOT MODIFY
#include "stdafx.h"
#include <Urho3D/Urho3D.h>
#include <Urho3D/Scene/Component.h>
#include <Urho3D/Container/Str.h>
#include "../MathBind.h"
#include "../ResourceRefWrapper.h"
#include "../SceneWrappers.h"
#include "../Variant.h"
#include "../StringHash.h"
#include "../UrControl.h"
#include "TextureFrame.h"

#include "ParticleEffect.h"
#include <Urho3D/Graphics/ParticleEffect.h>

namespace UrhoBackend {

TextureFrame::TextureFrame(Urho3D::TextureFrame fromUrho, ParticleEffect^ effect) { 
    textureframe_ = new Urho3D::TextureFrame(); 
    *textureframe_ = fromUrho; 
    textureframe_->uv_.Define(Urho3D::Vector2(0, 0), Urho3D::Vector2(1, 1));
    //??undefined?? textureframe_->uv_.Define(Urho3D::Rect(0.0f, 0.0f, 1.0f, 1.0f));
    effect_ = effect;
}
TextureFrame::~TextureFrame() { delete textureframe_; }
Rect^ TextureFrame::uv::get() { return gcnew UrhoBackend::Rect(textureframe_->uv_); }
void TextureFrame::uv::set(Rect^ value) { textureframe_->uv_ = value->ToRect(); effect_->UpdateFrames(); }

float TextureFrame::time::get() { return textureframe_->time_; }
void TextureFrame::time::set(float value) { textureframe_->time_ = value; effect_->UpdateFrames(); }

}
