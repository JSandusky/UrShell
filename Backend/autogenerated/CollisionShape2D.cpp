//THIS FILE IS AUTOGENERATED - DO NOT MODIFY
#include "stdafx.h"
#include <Urho3D/Urho3D.h>
#include <Urho3D/Scene/Component.h>
#include <Urho3D/Container/Str.h>
#include "../MathBind.h"
#include "../ResourceRefWrapper.h"
#include "../SceneWrappers.h"
#include "../Variant.h"
#include "../StringHash.h"
#include "../UrControl.h"
#include "CollisionShape2D.h"

#include <Urho3D/Urho2D/CollisionShape2D.h>

namespace UrhoBackend {

CollisionShape2D::CollisionShape2D(Urho3D::CollisionShape2D* fromUrho) : Component(fromUrho) { collisionshape2d_ = fromUrho; }
CollisionShape2D::CollisionShape2D(System::IntPtr^ ptr) : CollisionShape2D((Urho3D::CollisionShape2D*)ptr->ToPointer()) { }

void CollisionShape2D::categoryBits::set(int value) { collisionshape2d_->SetCategoryBits(value); }

bool CollisionShape2D::trigger::get() { return collisionshape2d_->IsTrigger(); }
void CollisionShape2D::trigger::set(bool value) { collisionshape2d_->SetTrigger(value); }

int CollisionShape2D::categoryBits::get() { return collisionshape2d_->GetCategoryBits(); }
int CollisionShape2D::maskBits::get() { return collisionshape2d_->GetMaskBits(); }
void CollisionShape2D::maskBits::set(int value) { collisionshape2d_->SetMaskBits(value); }

int CollisionShape2D::groupIndex::get() { return collisionshape2d_->GetGroupIndex(); }
void CollisionShape2D::groupIndex::set(int value) { collisionshape2d_->SetGroupIndex(value); }

float CollisionShape2D::density::get() { return collisionshape2d_->GetDensity(); }
void CollisionShape2D::density::set(float value) { collisionshape2d_->SetDensity(value); }

float CollisionShape2D::friction::get() { return collisionshape2d_->GetFriction(); }
void CollisionShape2D::friction::set(float value) { collisionshape2d_->SetFriction(value); }

float CollisionShape2D::restitution::get() { return collisionshape2d_->GetRestitution(); }
void CollisionShape2D::restitution::set(float value) { collisionshape2d_->SetRestitution(value); }

float CollisionShape2D::mass::get() { return collisionshape2d_->GetMass(); }
float CollisionShape2D::inertia::get() { return collisionshape2d_->GetInertia(); }
UrhoBackend::Vector2^ CollisionShape2D::massCenter::get() { return gcnew UrhoBackend::Vector2(collisionshape2d_->GetMassCenter()); }
}
