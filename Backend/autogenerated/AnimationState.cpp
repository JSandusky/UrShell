//THIS FILE IS AUTOGENERATED - DO NOT MODIFY
#include "stdafx.h"
#include <Urho3D/Urho3D.h>
#include <Urho3D/Scene/Component.h>
#include <Urho3D/Container/Str.h>
#include "../MathBind.h"
#include "../ResourceRefWrapper.h"
#include "../SceneWrappers.h"
#include "../Variant.h"
#include "../StringHash.h"
#include "../UrControl.h"
#include "AnimationState.h"

#include <Urho3D/Graphics/AnimationState.h>
#include <Urho3D/Graphics/Skeleton.h>
#include "Bone.h"
#include <Urho3D/Graphics/Animation.h>
#include "Animation.h"
#include <Urho3D/Graphics/AnimatedModel.h>
#include "AnimatedModel.h"

namespace UrhoBackend {

AnimationState::AnimationState(Urho3D::AnimationState* fromUrho) : RefCounted(fromUrho) { animationstate_ = fromUrho; }
AnimationState::AnimationState(System::IntPtr^ ptr) : AnimationState((Urho3D::AnimationState*)ptr->ToPointer()) { }

Bone^ AnimationState::startBone::get() { return gcnew UrhoBackend::Bone(animationstate_->GetStartBone()); }
void AnimationState::startBone::set(Bone^ value) { animationstate_->SetStartBone(value->bone_); }

bool AnimationState::looped::get() { return animationstate_->IsLooped(); }
void AnimationState::looped::set(bool value) { animationstate_->SetLooped(value); }

float AnimationState::weight::get() { return animationstate_->GetWeight(); }
void AnimationState::weight::set(float value) { animationstate_->SetWeight(value); }

float AnimationState::time::get() { return animationstate_->GetTime(); }
void AnimationState::time::set(float value) { animationstate_->SetTime(value); }

unsigned char AnimationState::layer::get() { return animationstate_->GetLayer(); }
void AnimationState::layer::set(unsigned char value) { animationstate_->SetLayer(value); }

Animation^ AnimationState::animation::get() { return gcnew UrhoBackend::Animation(animationstate_->GetAnimation()); }
AnimatedModel^ AnimationState::model::get() { return gcnew UrhoBackend::AnimatedModel(animationstate_->GetModel()); }
Node^ AnimationState::node::get() { return gcnew UrhoBackend::Node(animationstate_->GetNode()); }
bool AnimationState::enabled::get() { return animationstate_->IsEnabled(); }
float AnimationState::length::get() { return animationstate_->GetLength(); }
float AnimationState::boneWeights::get(System::String^ A) { return animationstate_->GetBoneWeight(Urho3D::String(ToCString(A))); }

void AnimationState::AddWeight(float A)  {  animationstate_->AddWeight(A); }

void AnimationState::AddTime(float A)  {  animationstate_->AddTime(A); }

void AnimationState::Apply()  {  animationstate_->Apply(); }

void AnimationState::SetBoneWeight(unsigned A, float B, bool recursive)  {  animationstate_->SetBoneWeight(A, B, recursive); }

void AnimationState::SetBoneWeight(System::String^ A, float B, bool recursive)  {  animationstate_->SetBoneWeight(Urho3D::String(ToCString(A)), B, recursive); }

void AnimationState::SetBoneWeight(UrhoBackend::StringHash^ A, float B, bool recursive)  {  animationstate_->SetBoneWeight(A->ToStringHash(), B, recursive); }

float AnimationState::GetBoneWeight(unsigned A)  { return  animationstate_->GetBoneWeight(A); }

float AnimationState::GetBoneWeight(UrhoBackend::StringHash^ A)  { return  animationstate_->GetBoneWeight(A->ToStringHash()); }

unsigned AnimationState::GetTrackIndex(System::String^ A)  { return  animationstate_->GetTrackIndex(Urho3D::String(ToCString(A))); }

unsigned AnimationState::GetTrackIndex(UrhoBackend::StringHash^ A)  { return  animationstate_->GetTrackIndex(A->ToStringHash()); }

}
