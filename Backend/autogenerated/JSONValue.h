//THIS FILE IS AUTOGENERATED - DO NOT MODIFY
#pragma once

#include <Urho3D/Urho3D.h>
#include <Urho3D/Scene/Component.h>
#include "../MathBind.h"
#include "../ResourceRefWrapper.h"
#include "../SceneWrappers.h"
#include "../Variant.h"
#include "../StringHash.h"
#include "../Attributes.h"

#include "Enumerations.h"

namespace Urho3D {
    class JSONValue;
    class String;
    class Vector2;
    class Vector3;
    class Vector4;
    class Variant;
    class Quaternion;
    class Color;
    class ResourceRef;
    class ResourceRefList;
    class IntRect;
    class IntVector2;
    class Matrix3;
    class Matrix3x4;
    class Matrix4;
}

#include <Urho3D/Resource/JSONValue.h>

namespace UrhoBackend {


    public ref class JSONValue {
    public:
        JSONValue(Urho3D::JSONValue comp);
        JSONValue(System::IntPtr^ ptr);
        ~JSONValue();

// Properties
        property bool isNull { bool get(); }
        property bool notNull { bool get(); }
        property bool isObject { bool get(); }
        property bool isArray { bool get(); }
        property unsigned size { unsigned get(); }
// Methods
        JSONValue^ opAssign(JSONValue^);
        JSONValue^ CreateChild(System::String^, JSONValueType);
        JSONValue^ GetChild(System::String^, JSONValueType);
        void SetInt(System::String^, int);
        void SetBool(System::String^, bool);
        void SetFloat(System::String^, float);
        void SetVector2(System::String^, UrhoBackend::Vector2^);
        void SetVector3(System::String^, UrhoBackend::Vector3^);
        void SetVector4(System::String^, UrhoBackend::Vector4^);
        void SetVectorVariant(System::String^, Variant^);
        void SetQuaternion(System::String^, UrhoBackend::Quaternion^);
        void SetColor(System::String^, UrhoBackend::Color^);
        void SetString(System::String^, System::String^);
        void SetResourceRef(System::String^, ResourceRef^);
        void SetResourceRefList(System::String^, ResourceRefList^);
        void SetIntRect(System::String^, UrhoBackend::IntRect^);
        void SetIntVector2(System::String^, UrhoBackend::IntVector2^);
        void SetMatrix3(System::String^, UrhoBackend::Matrix3^);
        void SetMatrix3x4(System::String^, UrhoBackend::Matrix3x4^);
        void SetMatrix4(System::String^, UrhoBackend::Matrix4^);
        void SetVariant(System::String^, Variant^);
        void SetVariantValue(System::String^, Variant^);
        int GetInt(System::String^);
        bool GetBool(System::String^);
        float GetFloat(System::String^);
        UrhoBackend::Vector2^ GetVector2(System::String^);
        UrhoBackend::Vector3^ GetVector3(System::String^);
        UrhoBackend::Vector4^ GetVector4(System::String^);
        Variant^ GetVectorVariant(System::String^);
        UrhoBackend::Quaternion^ GetQuaternion(System::String^);
        UrhoBackend::Color^ GetColor(System::String^);
        System::String^ GetString(System::String^);
        ResourceRef^ GetResourceRef(System::String^);
        ResourceRefList^ GetResourceRefList(System::String^);
        UrhoBackend::IntRect^ GetIntRect(System::String^);
        UrhoBackend::IntVector2^ GetIntVector2(System::String^);
        UrhoBackend::Matrix3^ GetMatrix3(System::String^);
        UrhoBackend::Matrix3x4^ GetMatrix3x4(System::String^);
        UrhoBackend::Matrix4^ GetMatrix4(System::String^);
        Variant^ GetVariant(System::String^);
        Variant^ GetVariantValue(System::String^, VariantType type);
        JSONValue^ CreateChild(JSONValueType);
        JSONValue^ GetChild(unsigned, JSONValueType);
        void AddInt(int);
        void AddBool(bool);
        void AddFloat(float);
        void AddVector2(UrhoBackend::Vector2^);
        void AddVector3(UrhoBackend::Vector3^);
        void AddVector4(UrhoBackend::Vector4^);
        void AddVectorVariant(Variant^);
        void AddQuaternion(UrhoBackend::Quaternion^);
        void AddColor(UrhoBackend::Color^);
        void AddString(System::String^);
        void AddResourceRef(ResourceRef^);
        void AddResourceRefList(ResourceRefList^);
        void AddIntRect(UrhoBackend::IntRect^);
        void AddIntVector2(UrhoBackend::IntVector2^);
        void AddMatrix3(UrhoBackend::Matrix3^);
        void AddMatrix3x4(UrhoBackend::Matrix3x4^);
        void AddMatrix4(UrhoBackend::Matrix4^);
        void AddVariant(Variant^);
        void AddVariantValue(Variant^);
        int GetInt(unsigned);
        bool GetBool(unsigned);
        float GetFloat(unsigned);
        UrhoBackend::Vector2^ GetVector2(unsigned);
        UrhoBackend::Vector3^ GetVector3(unsigned);
        UrhoBackend::Vector4^ GetVector4(unsigned);
        Variant^ GetVectorVariant(unsigned);
        UrhoBackend::Quaternion^ GetQuaternion(unsigned);
        UrhoBackend::Color^ GetColor(unsigned);
        System::String^ GetString(unsigned);
        ResourceRef^ GetResourceRef(unsigned);
        ResourceRefList^ GetResourceRefList(unsigned);
        UrhoBackend::IntRect^ GetIntRect(unsigned);
        UrhoBackend::IntVector2^ GetIntVector2(unsigned);
        UrhoBackend::Matrix3^ GetMatrix3(unsigned);
        UrhoBackend::Matrix3x4^ GetMatrix3x4(unsigned);
        UrhoBackend::Matrix4^ GetMatrix4(unsigned);
        Variant^ GetVariant(unsigned);
        Variant^ GetVariantValue(unsigned, VariantType type);
// Fields

        Urho3D::JSONValue* jsonvalue_;
    };
}
