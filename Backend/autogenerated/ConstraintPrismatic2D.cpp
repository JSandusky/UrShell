//THIS FILE IS AUTOGENERATED - DO NOT MODIFY
#include "stdafx.h"
#include <Urho3D/Urho3D.h>
#include <Urho3D/Scene/Component.h>
#include <Urho3D/Container/Str.h>
#include "../MathBind.h"
#include "../ResourceRefWrapper.h"
#include "../SceneWrappers.h"
#include "../Variant.h"
#include "../StringHash.h"
#include "../UrControl.h"
#include "ConstraintPrismatic2D.h"

#include <Urho3D/Urho2D/ConstraintPrismatic2D.h>

namespace UrhoBackend {

ConstraintPrismatic2D::ConstraintPrismatic2D(Urho3D::ConstraintPrismatic2D* fromUrho) : Constraint2D(fromUrho) { constraintprismatic2d_ = fromUrho; }
ConstraintPrismatic2D::ConstraintPrismatic2D(System::IntPtr^ ptr) : ConstraintPrismatic2D((Urho3D::ConstraintPrismatic2D*)ptr->ToPointer()) { }

UrhoBackend::Vector2^ ConstraintPrismatic2D::anchor::get() { return gcnew UrhoBackend::Vector2(constraintprismatic2d_->GetAnchor()); }
void ConstraintPrismatic2D::anchor::set(UrhoBackend::Vector2^ value) { constraintprismatic2d_->SetAnchor(value->ToVector2()); }

UrhoBackend::Vector2^ ConstraintPrismatic2D::axis::get() { return gcnew UrhoBackend::Vector2(constraintprismatic2d_->GetAxis()); }
void ConstraintPrismatic2D::axis::set(UrhoBackend::Vector2^ value) { constraintprismatic2d_->SetAxis(value->ToVector2()); }

bool ConstraintPrismatic2D::enableLimit::get() { return constraintprismatic2d_->GetEnableLimit(); }
void ConstraintPrismatic2D::enableLimit::set(bool value) { constraintprismatic2d_->SetEnableLimit(value); }

float ConstraintPrismatic2D::lowerTranslation::get() { return constraintprismatic2d_->GetLowerTranslation(); }
void ConstraintPrismatic2D::lowerTranslation::set(float value) { constraintprismatic2d_->SetLowerTranslation(value); }

float ConstraintPrismatic2D::upperTranslation::get() { return constraintprismatic2d_->GetUpperTranslation(); }
void ConstraintPrismatic2D::upperTranslation::set(float value) { constraintprismatic2d_->SetUpperTranslation(value); }

bool ConstraintPrismatic2D::enableMotor::get() { return constraintprismatic2d_->GetEnableMotor(); }
void ConstraintPrismatic2D::enableMotor::set(bool value) { constraintprismatic2d_->SetEnableMotor(value); }

float ConstraintPrismatic2D::maxMotorForce::get() { return constraintprismatic2d_->GetMaxMotorForce(); }
void ConstraintPrismatic2D::maxMotorForce::set(float value) { constraintprismatic2d_->SetMaxMotorForce(value); }

float ConstraintPrismatic2D::motorSpeed::get() { return constraintprismatic2d_->GetMotorSpeed(); }
void ConstraintPrismatic2D::motorSpeed::set(float value) { constraintprismatic2d_->SetMotorSpeed(value); }

}
