//THIS FILE IS AUTOGENERATED - DO NOT MODIFY
#include "stdafx.h"
#include <Urho3D/Urho3D.h>
#include <Urho3D/Scene/Component.h>
#include <Urho3D/Container/Str.h>
#include "../MathBind.h"
#include "../ResourceRefWrapper.h"
#include "../SceneWrappers.h"
#include "../Variant.h"
#include "../StringHash.h"
#include "../UrControl.h"
#include "Zone.h"

#include <Urho3D/Graphics/Zone.h>
#include <Urho3D/Math/BoundingBox.h>
#include "BoundingBox.h"
#include <Urho3D/Graphics/Texture.h>
#include "Texture.h"

namespace UrhoBackend {

Zone::Zone(Urho3D::Zone* fromUrho) : Drawable(fromUrho) { zone_ = fromUrho; }
Zone::Zone(System::IntPtr^ ptr) : Zone((Urho3D::Zone*)ptr->ToPointer()) { }

void Zone::override::set(bool value) { zone_->SetOverride(value); }

void Zone::boundingBox::set(BoundingBox^ value) { zone_->SetBoundingBox(*value->boundingbox_); }

UrhoBackend::Matrix3x4^ Zone::inverseWorldTransform::get() { return gcnew UrhoBackend::Matrix3x4(zone_->GetInverseWorldTransform()); }
UrhoBackend::Color^ Zone::ambientColor::get() { return gcnew Color(zone_->GetAmbientColor()); }
void Zone::ambientColor::set(UrhoBackend::Color^ value) { zone_->SetAmbientColor(value->ToColor()); }

UrhoBackend::Color^ Zone::ambientStartColor::get() { return gcnew Color(zone_->GetAmbientStartColor()); }
UrhoBackend::Color^ Zone::ambientEndColor::get() { return gcnew Color(zone_->GetAmbientEndColor()); }
UrhoBackend::Color^ Zone::fogColor::get() { return gcnew Color(zone_->GetFogColor()); }
void Zone::fogColor::set(UrhoBackend::Color^ value) { zone_->SetFogColor(value->ToColor()); }

float Zone::fogStart::get() { return zone_->GetFogStart(); }
void Zone::fogStart::set(float value) { zone_->SetFogStart(value); }

float Zone::fogEnd::get() { return zone_->GetFogEnd(); }
void Zone::fogEnd::set(float value) { zone_->SetFogEnd(value); }

float Zone::fogHeight::get() { return zone_->GetFogHeight(); }
void Zone::fogHeight::set(float value) { zone_->SetFogHeight(value); }

float Zone::fogHeightScale::get() { return zone_->GetFogHeightScale(); }
void Zone::fogHeightScale::set(float value) { zone_->SetFogHeightScale(value); }

int Zone::priority::get() { return zone_->GetPriority(); }
void Zone::priority::set(int value) { zone_->SetPriority(value); }

bool Zone::heightFog::get() { return zone_->GetHeightFog(); }
void Zone::heightFog::set(bool value) { zone_->SetHeightFog(value); }

bool Zone::override::get() { return zone_->GetOverride(); }
bool Zone::ambientGradient::get() { return zone_->GetAmbientGradient(); }
void Zone::ambientGradient::set(bool value) { zone_->SetAmbientGradient(value); }

Texture^ Zone::zoneTexture::get() { return gcnew UrhoBackend::Texture(zone_->GetZoneTexture()); }
void Zone::zoneTexture::set(Texture^ value) { zone_->SetZoneTexture(value->texture_); }

}
