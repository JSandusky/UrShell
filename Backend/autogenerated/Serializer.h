//THIS FILE IS AUTOGENERATED - DO NOT MODIFY
#pragma once

#include <Urho3D/Urho3D.h>
#include <Urho3D/Scene/Component.h>
#include "../MathBind.h"
#include "../ResourceRefWrapper.h"
#include "../SceneWrappers.h"
#include "../Variant.h"
#include "../StringHash.h"
#include "../Attributes.h"

#include "Enumerations.h"

namespace Urho3D {
    class Serializer;
    class IntRect;
    class IntVector2;
    class Vector2;
    class Vector3;
    class Vector4;
    class Quaternion;
    class Matrix3;
    class Matrix3x4;
    class Matrix4;
    class Color;
    class BoundingBox;
    class String;
    class StringHash;
    class Variant;
    class VariantMap;
}

#include <Urho3D/IO/Serializer.h>

namespace UrhoBackend {

    ref class BoundingBox;

    public ref class Serializer {
    public:
        Serializer(Urho3D::Serializer comp);
        Serializer(System::IntPtr^ ptr);
        ~Serializer();

// Properties
// Methods
        bool WriteInt(int);
        bool WriteShort(short);
        bool WriteByte(char);
        bool WriteUInt(unsigned);
        bool WriteUShort(unsigned short);
        bool WriteUByte(unsigned char);
        bool WriteBool(bool);
        bool WriteFloat(float);
        bool WriteIntRect(UrhoBackend::IntRect^);
        bool WriteIntVector2(UrhoBackend::IntVector2^);
        bool WriteVector2(UrhoBackend::Vector2^);
        bool WriteVector3(UrhoBackend::Vector3^);
        bool WritePackedVector3(UrhoBackend::Vector3^, float);
        bool WriteVector4(UrhoBackend::Vector4^);
        bool WriteQuaternion(UrhoBackend::Quaternion^);
        bool WritePackedQuaternion(UrhoBackend::Quaternion^);
        bool WriteMatrix3(UrhoBackend::Matrix3^);
        bool WriteMatrix3x4(UrhoBackend::Matrix3x4^);
        bool WriteMatrix4(UrhoBackend::Matrix4^);
        bool WriteColor(UrhoBackend::Color^);
        bool WriteBoundingBox(BoundingBox^);
        bool WriteString(System::String^);
        bool WriteFileID(System::String^);
        bool WriteStringHash(UrhoBackend::StringHash^);
        bool WriteVariant(Variant^);
        bool WriteVariantMap(UrhoBackend::VariantMap^);
        bool WriteVLE(unsigned);
        bool WriteNetID(unsigned);
        bool WriteLine(System::String^);
// Fields

        Urho3D::Serializer* serializer_;
    };
}
