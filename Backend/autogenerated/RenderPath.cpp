//THIS FILE IS AUTOGENERATED - DO NOT MODIFY
#include "stdafx.h"
#include <Urho3D/Urho3D.h>
#include <Urho3D/Scene/Component.h>
#include <Urho3D/Container/Str.h>
#include "../MathBind.h"
#include "../ResourceRefWrapper.h"
#include "../SceneWrappers.h"
#include "../Variant.h"
#include "../StringHash.h"
#include "../UrControl.h"
#include "RenderPath.h"

#include <Urho3D/Graphics/RenderPath.h>
#include <Urho3D/Resource/XMLFile.h>
#include "XMLFile.h"
#include <Urho3D/Graphics/RenderPath.h>
#include "RenderTargetInfo.h"
#include <Urho3D/Graphics/RenderPath.h>
#include "RenderPathCommand.h"

namespace UrhoBackend {

RenderPath::RenderPath(Urho3D::RenderPath* fromUrho) : RefCounted(fromUrho) { renderpath_ = fromUrho; }
RenderPath::RenderPath(System::IntPtr^ ptr) : RenderPath((Urho3D::RenderPath*)ptr->ToPointer()) { }

unsigned RenderPath::numRenderTargets::get() { return renderpath_->GetNumRenderTargets(); }
void RenderPath::renderTargets::set(unsigned A, RenderTargetInfo^ B) { renderpath_->SetRenderTarget(A, *B->rendertargetinfo_); }

unsigned RenderPath::numCommands::get() { return renderpath_->GetNumCommands(); }
void RenderPath::commands::set(unsigned A, RenderPathCommand^ B) { renderpath_->SetCommand(A, *B->renderpathcommand_); }

Variant^ RenderPath::shaderParameters::get(System::String^ A) { return gcnew UrhoBackend::Variant(renderpath_->GetShaderParameter(Urho3D::String(ToCString(A)))); }

void RenderPath::shaderParameters::set(System::String^ A, Variant^ B) { renderpath_->SetShaderParameter(Urho3D::String(ToCString(A)), *B->variant_); }

bool RenderPath::Load(XMLFile^ A)  { return  renderpath_->Load(A->xmlfile_); }

bool RenderPath::Append(XMLFile^ A)  { return  renderpath_->Append(A->xmlfile_); }

void RenderPath::SetEnabled(System::String^ A, bool B)  {  renderpath_->SetEnabled(Urho3D::String(ToCString(A)), B); }

void RenderPath::ToggleEnabled(System::String^ A)  {  renderpath_->ToggleEnabled(Urho3D::String(ToCString(A))); }

void RenderPath::AddRenderTarget(RenderTargetInfo^ A)  {  renderpath_->AddRenderTarget(*A->rendertargetinfo_); }

void RenderPath::RemoveRenderTarget(unsigned A)  {  renderpath_->RemoveRenderTarget(A); }

void RenderPath::RemoveRenderTarget(System::String^ A)  {  renderpath_->RemoveRenderTarget(Urho3D::String(ToCString(A))); }

void RenderPath::RemoveRenderTargts(System::String^ A)  {  renderpath_->RemoveRenderTargets(Urho3D::String(ToCString(A))); }

void RenderPath::AddCommand(RenderPathCommand^ A)  {  renderpath_->AddCommand(*A->renderpathcommand_); }

void RenderPath::InsertCommand(unsigned A, RenderPathCommand^ B)  {  renderpath_->InsertCommand(A, *B->renderpathcommand_); }

void RenderPath::RemoveCommand(unsigned A)  {  renderpath_->RemoveCommand(A); }

void RenderPath::RemoveCommands(System::String^ A)  {  renderpath_->RemoveCommands(Urho3D::String(ToCString(A))); }

}
