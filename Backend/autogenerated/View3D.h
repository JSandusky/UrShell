//THIS FILE IS AUTOGENERATED - DO NOT MODIFY
#pragma once

#include <Urho3D/Urho3D.h>
#include <Urho3D/Scene/Component.h>
#include "../MathBind.h"
#include "../ResourceRefWrapper.h"
#include "../SceneWrappers.h"
#include "../Variant.h"
#include "../StringHash.h"
#include "../Attributes.h"

#include "Enumerations.h"

namespace Urho3D {
    class View3D;
    class Scene;
    class Camera;
    class IntRect;
    class Color;
    class IntVector2;
    class Texture2D;
    class Viewport;
    class Node;
}



namespace UrhoBackend {

    ref class Camera;
    ref class Texture2D;
    ref class Viewport;

    public ref class View3D : public UrhoBackend::UIElement {
    public:
        View3D(Urho3D::View3D* comp);
        View3D(System::IntPtr^ ptr);

// Properties
        property bool fixedWidthResizing { void set(bool); }
        property bool fixedHeightResizing { void set(bool); }
        property bool movable { bool get(); void set(bool); }
        property bool resizable { bool get(); void set(bool); }
        property UrhoBackend::IntRect^ resizeBorder { UrhoBackend::IntRect^ get(); void set(UrhoBackend::IntRect^); }
        property bool modal { bool get(); void set(bool); }
        property UrhoBackend::Color^ modalShadeColor { UrhoBackend::Color^ get(); void set(UrhoBackend::Color^); }
        property UrhoBackend::Color^ modalFrameColor { UrhoBackend::Color^ get(); void set(UrhoBackend::Color^); }
        property UrhoBackend::IntVector2^ modalFrameSize { UrhoBackend::IntVector2^ get(); void set(UrhoBackend::IntVector2^); }
        property bool modalAutoDismiss { bool get(); void set(bool); }
        property bool fixedWidthResizing { bool get(); }
        property bool fixedHeightResizing { bool get(); }
        property unsigned format { unsigned get(); void set(unsigned); }
        property bool autoUpdate { bool get(); void set(bool); }
        property Texture2D^ renderTexture { Texture2D^ get(); }
        property Texture2D^ depthTexture { Texture2D^ get(); }
        property Viewport^ viewport { Viewport^ get(); }
        property Scene^ scene { Scene^ get(); }
        property Node^ cameraNode { Node^ get(); }
// Methods
        void SetView(Scene^, Camera^, bool);
        void QueueUpdate();
// Fields

        Urho3D::View3D* view3d_;
    };
}
