//THIS FILE IS AUTOGENERATED - DO NOT MODIFY
#include "stdafx.h"
#include <Urho3D/Urho3D.h>
#include <Urho3D/Scene/Component.h>
#include <Urho3D/Container/Str.h>
#include "../MathBind.h"
#include "../ResourceRefWrapper.h"
#include "../SceneWrappers.h"
#include "../Variant.h"
#include "../StringHash.h"
#include "../UrControl.h"
#include "FileSystem.h"

#include <Urho3D/IO/FileSystem.h>

namespace UrhoBackend {

FileSystem::FileSystem(Urho3D::FileSystem* fromUrho) : Object(fromUrho) { filesystem_ = fromUrho; }
FileSystem::FileSystem(System::IntPtr^ ptr) : FileSystem((Urho3D::FileSystem*)ptr->ToPointer()) { }

System::String^ FileSystem::currentDir::get() { return gcnew System::String(filesystem_->GetCurrentDir().CString()); }
void FileSystem::currentDir::set(System::String^ value) { filesystem_->SetCurrentDir(Urho3D::String(ToCString(value))); }

bool FileSystem::executeConsoleCommands::get() { return filesystem_->GetExecuteConsoleCommands(); }
void FileSystem::executeConsoleCommands::set(bool value) { filesystem_->SetExecuteConsoleCommands(value); }

System::String^ FileSystem::programDir::get() { return gcnew System::String(filesystem_->GetProgramDir().CString()); }
System::String^ FileSystem::userDocumentsDir::get() { return gcnew System::String(filesystem_->GetUserDocumentsDir().CString()); }
bool FileSystem::FileExists(System::String^ A)  { return  filesystem_->FileExists(Urho3D::String(ToCString(A))); }

bool FileSystem::DirExists(System::String^ A)  { return  filesystem_->DirExists(Urho3D::String(ToCString(A))); }

bool FileSystem::SetLastModifiedTime(System::String^ A, unsigned B)  { return  filesystem_->SetLastModifiedTime(Urho3D::String(ToCString(A)), B); }

unsigned FileSystem::GetLastModifiedTime(System::String^ A)  { return  filesystem_->GetLastModifiedTime(Urho3D::String(ToCString(A))); }

bool FileSystem::CreateDir(System::String^ A)  { return  filesystem_->CreateDir(Urho3D::String(ToCString(A))); }

int FileSystem::SystemCommand(System::String^ A, bool redirectStdOutToLog)  { return  filesystem_->SystemCommand(Urho3D::String(ToCString(A)), redirectStdOutToLog); }

unsigned FileSystem::SystemCommandAsync(System::String^ A)  { return  filesystem_->SystemCommandAsync(Urho3D::String(ToCString(A))); }

bool FileSystem::SystemOpen(System::String^ A, System::String^ B)  { return  filesystem_->SystemOpen(Urho3D::String(ToCString(A)), Urho3D::String(ToCString(B))); }

bool FileSystem::Copy(System::String^ A, System::String^ B)  { return  filesystem_->Copy(Urho3D::String(ToCString(A)), Urho3D::String(ToCString(B))); }

bool FileSystem::Rename(System::String^ A, System::String^ B)  { return  filesystem_->Rename(Urho3D::String(ToCString(A)), Urho3D::String(ToCString(B))); }

bool FileSystem::Delete(System::String^ A)  { return  filesystem_->Delete(Urho3D::String(ToCString(A))); }

System::String^ FileSystem::GetAppPreferencesDir(String org A, String app B)  { return  gcnew System::String(filesystem_->GetAppPreferencesDir(A, B).CString()); }

}
