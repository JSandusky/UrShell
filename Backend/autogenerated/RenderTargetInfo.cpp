//THIS FILE IS AUTOGENERATED - DO NOT MODIFY
#include "stdafx.h"
#include <Urho3D/Urho3D.h>
#include <Urho3D/Scene/Component.h>
#include <Urho3D/Container/Str.h>
#include "../MathBind.h"
#include "../ResourceRefWrapper.h"
#include "../SceneWrappers.h"
#include "../Variant.h"
#include "../StringHash.h"
#include "../UrControl.h"
#include "RenderTargetInfo.h"

#include <Urho3D/Graphics/RenderPath.h>
#include <Urho3D/Graphics/RenderPath.h>

namespace UrhoBackend {

RenderTargetInfo::RenderTargetInfo(Urho3D::RenderTargetInfo fromUrho) { rendertargetinfo_ = new Urho3D::RenderTargetInfo(); *rendertargetinfo_ = fromUrho; }
RenderTargetInfo::RenderTargetInfo(System::IntPtr^ ptr) : RenderTargetInfo(*((Urho3D::RenderTargetInfo*)ptr->ToPointer())) { }
RenderTargetInfo::~RenderTargetInfo() { delete rendertargetinfo_; }
RenderTargetInfo^ RenderTargetInfo::opAssign(RenderTargetInfo^ A)  { return  gcnew UrhoBackend::RenderTargetInfo(rendertargetinfo_->operator =(*A->rendertargetinfo_)); }

System::String^ RenderTargetInfo::name::get() { return gcnew System::String(rendertargetinfo_->name_.CString()); }
void RenderTargetInfo::name::set(System::String^ value) { rendertargetinfo_->name_ = Urho3D::String(ToCString(value)); }

System::String^ RenderTargetInfo::tag::get() { return gcnew System::String(rendertargetinfo_->tag_.CString()); }
void RenderTargetInfo::tag::set(System::String^ value) { rendertargetinfo_->tag_ = Urho3D::String(ToCString(value)); }

unsigned RenderTargetInfo::format::get() { return rendertargetinfo_->format_; }
void RenderTargetInfo::format::set(unsigned value) { rendertargetinfo_->format_ = value; }

UrhoBackend::Vector2^ RenderTargetInfo::size::get() { return gcnew UrhoBackend::Vector2(rendertargetinfo_->size_); }
void RenderTargetInfo::size::set(UrhoBackend::Vector2^ value) { rendertargetinfo_->size_ = value->ToVector2(); }

RenderTargetSizeMode RenderTargetInfo::sizeMode::get() { return (UrhoBackend::RenderTargetSizeMode)rendertargetinfo_->sizeMode_; }
void RenderTargetInfo::sizeMode::set(RenderTargetSizeMode value) { rendertargetinfo_->sizeMode_ = (Urho3D::RenderTargetSizeMode)value; }

bool RenderTargetInfo::enabled::get() { return rendertargetinfo_->enabled_; }
void RenderTargetInfo::enabled::set(bool value) { rendertargetinfo_->enabled_ = value; }

bool RenderTargetInfo::cubemap::get() { return rendertargetinfo_->cubemap_; }
void RenderTargetInfo::cubemap::set(bool value) { rendertargetinfo_->cubemap_ = value; }

bool RenderTargetInfo::filtered::get() { return rendertargetinfo_->filtered_; }
void RenderTargetInfo::filtered::set(bool value) { rendertargetinfo_->filtered_ = value; }

bool RenderTargetInfo::sRGB::get() { return rendertargetinfo_->sRGB_; }
void RenderTargetInfo::sRGB::set(bool value) { rendertargetinfo_->sRGB_ = value; }

bool RenderTargetInfo::persistent::get() { return rendertargetinfo_->persistent_; }
void RenderTargetInfo::persistent::set(bool value) { rendertargetinfo_->persistent_ = value; }

}
