//THIS FILE IS AUTOGENERATED - DO NOT MODIFY
#pragma once

#include <Urho3D/Urho3D.h>
#include <Urho3D/Scene/Component.h>
#include "../MathBind.h"
#include "../ResourceRefWrapper.h"
#include "../SceneWrappers.h"
#include "../Variant.h"
#include "../StringHash.h"
#include "../Attributes.h"

#include <Urho3D/Math/Sphere.h>

namespace UrhoBackend {

    ref class BoundingBox;
    ref class Frustum;
    ref class Polyhedron;

    public ref class Sphere {
    public:
        Sphere(Urho3D::Sphere comp);
        Sphere(System::IntPtr^ ptr);
        ~Sphere();

// Properties
// Methods
        Sphere^ opAssign(Sphere^);
        bool opEquals(Sphere^);
        void Define(UrhoBackend::Vector3^, float);
        void Define(BoundingBox^);
        void Define(Frustum^);
        void Define(Polyhedron^);
        void Define(Sphere^);
        void Merge(UrhoBackend::Vector3^);
        void Merge(BoundingBox^);
        void Merge(Frustum^);
        void Merge(Sphere^);
        void Clear();
        Intersection IsInside(UrhoBackend::Vector3^);
        Intersection IsInside(Sphere^);
        Intersection IsInside(BoundingBox^);
        float Distance(UrhoBackend::Vector3^);
// Fields
        property UrhoBackend::Vector3^ center { UrhoBackend::Vector3^ get(); void set(UrhoBackend::Vector3^ value); }
        property float radius { float get(); void set(float value); }
        property bool defined { bool get(); void set(bool value); }

        Urho3D::Sphere* sphere_;
    };
}
