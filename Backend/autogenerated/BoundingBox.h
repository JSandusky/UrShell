//THIS FILE IS AUTOGENERATED - DO NOT MODIFY
#pragma once

#include <Urho3D/Urho3D.h>
#include <Urho3D/Scene/Component.h>
#include "../MathBind.h"
#include "../ResourceRefWrapper.h"
#include "../SceneWrappers.h"
#include "../Variant.h"
#include "../StringHash.h"
#include "../Attributes.h"

#include <Urho3D/Math/BoundingBox.h>

namespace UrhoBackend {

    ref class Frustum;
    ref class Polyhedron;
    ref class Sphere;

    public ref class BoundingBox {
    public:
        BoundingBox(Urho3D::BoundingBox comp);
        BoundingBox(System::IntPtr^ ptr);
        ~BoundingBox();

// Properties
        property UrhoBackend::Vector3^ center { UrhoBackend::Vector3^ get(); }
        property UrhoBackend::Vector3^ size { UrhoBackend::Vector3^ get(); }
        property UrhoBackend::Vector3^ halfSize { UrhoBackend::Vector3^ get(); }
// Methods
        BoundingBox^ opAssign(BoundingBox^);
        bool opEquals(BoundingBox^);
        void Define(UrhoBackend::Vector3^, UrhoBackend::Vector3^);
        void Define(float, float);
        void Define(UrhoBackend::Vector3^);
        void Define(BoundingBox^);
        void Define(Frustum^);
        void Define(Polyhedron^);
        void Define(Sphere^);
        void Merge(UrhoBackend::Vector3^);
        void Merge(BoundingBox^);
        void Merge(Frustum^);
        void Merge(Polyhedron^);
        void Merge(Sphere^);
        void Clip(BoundingBox^);
        void Clear();
        void Transform(UrhoBackend::Matrix3^);
        void Transform(UrhoBackend::Matrix3x4^);
        Intersection IsInside(UrhoBackend::Vector3^);
        Intersection IsInside(Sphere^);
        Intersection IsInside(BoundingBox^);
        BoundingBox^ Transformed(UrhoBackend::Matrix3^);
        BoundingBox^ Transformed(UrhoBackend::Matrix3x4^);
        Rect^ Projected(UrhoBackend::Matrix4^);
        System::String^ ToString() override;
// Fields
        property UrhoBackend::Vector3^ min { UrhoBackend::Vector3^ get(); void set(UrhoBackend::Vector3^ value); }
        property UrhoBackend::Vector3^ max { UrhoBackend::Vector3^ get(); void set(UrhoBackend::Vector3^ value); }
        property bool defined { bool get(); void set(bool value); }

        Urho3D::BoundingBox* boundingbox_;
    };
}
