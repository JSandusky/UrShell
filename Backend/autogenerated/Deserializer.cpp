//THIS FILE IS AUTOGENERATED - DO NOT MODIFY
#include "stdafx.h"
#include <Urho3D/Urho3D.h>
#include <Urho3D/Scene/Component.h>
#include <Urho3D/Container/Str.h>
#include "../MathBind.h"
#include "../ResourceRefWrapper.h"
#include "../SceneWrappers.h"
#include "../Variant.h"
#include "../StringHash.h"
#include "../UrControl.h"
#include "Deserializer.h"

#include <Urho3D/IO/Deserializer.h>
#include <Urho3D/Math/BoundingBox.h>
#include "BoundingBox.h"

namespace UrhoBackend {

Deserializer::Deserializer(Urho3D::Deserializer* fromUrho) { deserializer_ = fromUrho; }
Deserializer::Deserializer(System::IntPtr^ ptr) : Deserializer(((Urho3D::Deserializer*)ptr->ToPointer())) { }

Deserializer::Deserializer(System::String text)
{
    deserializer_ = new Urho3D::Deserializer();
}

Deserializer::~Deserializer() { delete deserializer_; }
System::String^ Deserializer::name::get() { return gcnew System::String(deserializer_->GetName().CString()); }
unsigned Deserializer::checksum::get() { return deserializer_->GetChecksum(); }
unsigned Deserializer::position::get() { return deserializer_->GetPosition(); }
unsigned Deserializer::size::get() { return deserializer_->GetSize(); }
bool Deserializer::eof::get() { return deserializer_->IsEof(); }
int Deserializer::ReadInt()  { return  deserializer_->ReadInt(); }

short Deserializer::ReadShort()  { return  deserializer_->ReadShort(); }

signed char Deserializer::ReadByte()  { return  deserializer_->ReadByte(); }

unsigned Deserializer::ReadUInt()  { return  deserializer_->ReadUInt(); }

unsigned short Deserializer::ReadUShort()  { return  deserializer_->ReadUShort(); }

unsigned char Deserializer::ReadUByte()  { return  deserializer_->ReadUByte(); }

bool Deserializer::ReadBool()  { return  deserializer_->ReadBool(); }

float Deserializer::ReadFloat()  { return  deserializer_->ReadFloat(); }

UrhoBackend::IntRect^ Deserializer::ReadIntRect()  { return  gcnew UrhoBackend::IntRect(deserializer_->ReadIntRect()); }

UrhoBackend::IntVector2^ Deserializer::ReadIntVector2()  { return  gcnew UrhoBackend::IntVector2(deserializer_->ReadIntVector2()); }

UrhoBackend::Vector2^ Deserializer::ReadVector2()  { return  gcnew UrhoBackend::Vector2(deserializer_->ReadVector2()); }

UrhoBackend::Vector3^ Deserializer::ReadVector3()  { return  gcnew UrhoBackend::Vector3(deserializer_->ReadVector3()); }

UrhoBackend::Vector3^ Deserializer::ReadPackedVector3(float A)  { return  gcnew UrhoBackend::Vector3(deserializer_->ReadPackedVector3(A)); }

UrhoBackend::Vector4^ Deserializer::ReadVector4()  { return  gcnew UrhoBackend::Vector4(deserializer_->ReadVector4()); }

UrhoBackend::Quaternion^ Deserializer::ReadQuaternion()  { return  gcnew UrhoBackend::Quaternion(deserializer_->ReadQuaternion()); }

UrhoBackend::Quaternion^ Deserializer::ReadPackedQuaternion()  { return  gcnew UrhoBackend::Quaternion(deserializer_->ReadPackedQuaternion()); }

UrhoBackend::Matrix3^ Deserializer::ReadMatrix3()  { return  gcnew UrhoBackend::Matrix3(deserializer_->ReadMatrix3()); }

UrhoBackend::Matrix3x4^ Deserializer::ReadMatrix3x4()  { return  gcnew UrhoBackend::Matrix3x4(deserializer_->ReadMatrix3x4()); }

UrhoBackend::Matrix4^ Deserializer::ReadMatrix4()  { return  gcnew UrhoBackend::Matrix4(deserializer_->ReadMatrix4()); }

UrhoBackend::Color^ Deserializer::ReadColor()  { return  gcnew Color(deserializer_->ReadColor()); }

BoundingBox^ Deserializer::ReadBoundingBox()  { return  gcnew UrhoBackend::BoundingBox(deserializer_->ReadBoundingBox()); }

System::String^ Deserializer::ReadString()  { return  gcnew System::String(deserializer_->ReadString().CString()); }

System::String^ Deserializer::ReadFileID()  { return  gcnew System::String(deserializer_->ReadFileID().CString()); }

UrhoBackend::StringHash^ Deserializer::ReadStringHash()  { return  gcnew UrhoBackend::StringHash(deserializer_->ReadStringHash()); }

Variant^ Deserializer::ReadVariant()  { return  gcnew UrhoBackend::Variant(deserializer_->ReadVariant()); }

UrhoBackend::VariantMap^ Deserializer::ReadVariantMap()  { return  gcnew UrhoBackend::VariantMap(deserializer_->ReadVariantMap()); }

unsigned Deserializer::ReadVLE()  { return  deserializer_->ReadVLE(); }

unsigned Deserializer::ReadNetID()  { return  deserializer_->ReadNetID(); }

System::String^ Deserializer::ReadLine()  { return  gcnew System::String(deserializer_->ReadLine().CString()); }

unsigned Deserializer::Seek(unsigned A)  { return  deserializer_->Seek(A); }

}
