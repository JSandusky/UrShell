//THIS FILE IS AUTOGENERATED - DO NOT MODIFY
#include "stdafx.h"
#include <Urho3D/Urho3D.h>
#include <Urho3D/Scene/Component.h>
#include <Urho3D/Container/Str.h>
#include "../MathBind.h"
#include "../ResourceRefWrapper.h"
#include "../SceneWrappers.h"
#include "../Variant.h"
#include "../StringHash.h"
#include "../UrControl.h"
#include "ResourceCache.h"

#include <Urho3D/Resource/ResourceCache.h>
#include <Urho3D/IO/PackageFile.h>
#include "PackageFile.h"
#include <Urho3D/Resource/Resource.h>
#include "Resource.h"

namespace UrhoBackend {

ResourceCache::ResourceCache(Urho3D::ResourceCache* fromUrho) : Object(fromUrho) { resourcecache_ = fromUrho; }
ResourceCache::ResourceCache(System::IntPtr^ ptr) : ResourceCache((Urho3D::ResourceCache*)ptr->ToPointer()) { }

unsigned ResourceCache::totalMemoryUse::get() { return resourcecache_->GetTotalMemoryUse(); }
void ResourceCache::searchPackagesFirst::set(bool value) { resourcecache_->SetSearchPackagesFirst(value); }

bool ResourceCache::seachPackagesFirst::get() { return resourcecache_->GetSearchPackagesFirst(); }
bool ResourceCache::autoReloadResources::get() { return resourcecache_->GetAutoReloadResources(); }
void ResourceCache::autoReloadResources::set(bool value) { resourcecache_->SetAutoReloadResources(value); }

bool ResourceCache::returnFailedResources::get() { return resourcecache_->GetReturnFailedResources(); }
void ResourceCache::returnFailedResources::set(bool value) { resourcecache_->SetReturnFailedResources(value); }

int ResourceCache::finishBackgroundResourcesMs::get() { return resourcecache_->GetFinishBackgroundResourcesMs(); }
void ResourceCache::finishBackgroundResourcesMs::set(int value) { resourcecache_->SetFinishBackgroundResourcesMs(value); }

unsigned ResourceCache::numBackgroundLoadResources::get() { return resourcecache_->GetNumBackgroundLoadResources(); }
bool ResourceCache::AddResourceDir(System::String^ A, unsigned priority)  { return  resourcecache_->AddResourceDir(Urho3D::String(ToCString(A)), priority); }

bool ResourceCache::AddPackageFile(PackageFile^ A, unsigned priority)  { return  resourcecache_->AddPackageFile(A->packagefile_, priority); }

bool ResourceCache::AddPackageFile(System::String^ A, unsigned priority)  { return  resourcecache_->AddPackageFile(Urho3D::String(ToCString(A)), priority); }

bool ResourceCache::AddManualResource(Resource^ A)  { return  resourcecache_->AddManualResource(A->resource_); }

void ResourceCache::RemoveResourceDir(System::String^ A)  {  resourcecache_->RemoveResourceDir(Urho3D::String(ToCString(A))); }

void ResourceCache::RemovePackageFile(PackageFile^ A, bool releaseResources, bool forceRelease)  {  resourcecache_->RemovePackageFile(A->packagefile_, releaseResources, forceRelease); }

void ResourceCache::RemovePackageFile(System::String^ A, bool releaseResources, bool forceRelease)  {  resourcecache_->RemovePackageFile(Urho3D::String(ToCString(A)), releaseResources, forceRelease); }

void ResourceCache::ReleaseResources(UrhoBackend::StringHash^ A, bool force)  {  resourcecache_->ReleaseResources(A->ToStringHash(), force); }

void ResourceCache::ReleaseResources(System::String^ A, bool force)  {  resourcecache_->ReleaseResources(Urho3D::String(ToCString(A)), force); }

void ResourceCache::ReleaseAllResources(bool force)  {  resourcecache_->ReleaseAllResources(force); }

bool ResourceCache::ReloadResource(Resource^ A)  { return  resourcecache_->ReloadResource(A->resource_); }

void ResourceCache::ReloadResourceWithDependencies(System::String^ A)  {  resourcecache_->ReloadResourceWithDependencies(Urho3D::String(ToCString(A))); }

bool ResourceCache::Exists(System::String^ A)  { return  resourcecache_->Exists(Urho3D::String(ToCString(A))); }

System::String^ ResourceCache::GetPreferredResourceDir(System::String^ A)  { return  gcnew System::String(resourcecache_->GetPreferredResourceDir(Urho3D::String(ToCString(A))).CString()); }

System::String^ ResourceCache::SanitateResourceName(System::String^ A)  { return  gcnew System::String(resourcecache_->SanitateResourceName(Urho3D::String(ToCString(A))).CString()); }

System::String^ ResourceCache::SanitateResourceDirName(System::String^ A)  { return  gcnew System::String(resourcecache_->SanitateResourceDirName(Urho3D::String(ToCString(A))).CString()); }

System::String^ ResourceCache::GetResourceFileName(System::String^ A)  { return  gcnew System::String(resourcecache_->GetResourceFileName(Urho3D::String(ToCString(A))).CString()); }

Resource^ ResourceCache::GetResource(UrhoBackend::StringHash^ A, System::String^ B, bool sendEventOnFailure)  { return  gcnew UrhoBackend::Resource(resourcecache_->GetResource(A->ToStringHash(), Urho3D::String(ToCString(B)), sendEventOnFailure)); }

Resource^ ResourceCache::GetExistingResource(UrhoBackend::StringHash^ A, System::String^ B)  { return  gcnew UrhoBackend::Resource(resourcecache_->GetExistingResource(A->ToStringHash(), Urho3D::String(ToCString(B)))); }

}
