//THIS FILE IS AUTOGENERATED - DO NOT MODIFY
#include "stdafx.h"
#include <Urho3D/Urho3D.h>
#include <Urho3D/Scene/Component.h>
#include <Urho3D/Container/Str.h>
#include "../MathBind.h"
#include "../ResourceRefWrapper.h"
#include "../SceneWrappers.h"
#include "../Variant.h"
#include "../StringHash.h"
#include "../UrControl.h"
#include "VertexBuffer.h"

#include <Urho3D/Graphics/VertexBuffer.h>

namespace UrhoBackend {

VertexBuffer::VertexBuffer(Urho3D::VertexBuffer* fromUrho) : Object(fromUrho) { vertexbuffer_ = fromUrho; }
VertexBuffer::VertexBuffer(System::IntPtr^ ptr) : VertexBuffer((Urho3D::VertexBuffer*)ptr->ToPointer()) { }

bool VertexBuffer::shadowed::get() { return vertexbuffer_->IsShadowed(); }
void VertexBuffer::shadowed::set(bool value) { vertexbuffer_->SetShadowed(value); }

bool VertexBuffer::dynamic::get() { return vertexbuffer_->IsDynamic(); }
unsigned VertexBuffer::vertexCount::get() { return vertexbuffer_->GetVertexCount(); }
unsigned VertexBuffer::vertexSize::get() { return vertexbuffer_->GetVertexSize(); }
unsigned VertexBuffer::elementMask::get() { return vertexbuffer_->GetElementMask(); }
void VertexBuffer::SetSize(unsigned A, unsigned B, bool dynamic)  {  vertexbuffer_->SetSize(A, B, dynamic); }

}
