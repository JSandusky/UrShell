//THIS FILE IS AUTOGENERATED - DO NOT MODIFY
#pragma once

#include <Urho3D/Urho3D.h>
#include <Urho3D/Scene/Component.h>
#include "../MathBind.h"
#include "../ResourceRefWrapper.h"
#include "../SceneWrappers.h"
#include "../Variant.h"
#include "../StringHash.h"
#include "../Attributes.h"

#include "Enumerations.h"

namespace Urho3D {
    class Light;
    class Color;
    class BiasParameters;
    class CascadeParameters;
    class FocusParameters;
    class Texture;
    class Frustum;
}

#include "Drawable.h"

namespace UrhoBackend {

    ref class BiasParameters;
    ref class CascadeParameters;
    ref class FocusParameters;
    ref class Texture;
    ref class Frustum;

    public ref class Light : public UrhoBackend::Drawable {
    public:
        Light(Urho3D::Light* comp);
        Light(System::IntPtr^ ptr);

// Properties
        property LightType lightType { LightType get(); void set(LightType); }
        property bool perVertex { bool get(); void set(bool); }
        property UrhoBackend::Color^ color { UrhoBackend::Color^ get(); void set(UrhoBackend::Color^); }
        property float specularIntensity { float get(); void set(float); }
        property float brightness { float get(); void set(float); }
        property float range { float get(); void set(float); }
        property float fov { float get(); void set(float); }
        property float aspectRatio { float get(); void set(float); }
        property float fadeDistance { float get(); void set(float); }
        property BiasParameters^ shadowBias { BiasParameters^ get(); void set(BiasParameters^); }
        property CascadeParameters^ shadowCascade { CascadeParameters^ get(); void set(CascadeParameters^); }
        property FocusParameters^ shadowFocus { FocusParameters^ get(); void set(FocusParameters^); }
        property float shadowFadeDistance { float get(); void set(float); }
        property float shadowIntensity { float get(); void set(float); }
        property float shadowResolution { float get(); void set(float); }
        property float shadowNearFarRatio { float get(); void set(float); }
        property Texture^ rampTexture { Texture^ get(); void set(Texture^); }
        property Texture^ shapeTexture { Texture^ get(); void set(Texture^); }
        property Frustum^ frustum { Frustum^ get(); }
        property int numShadowSplits { int get(); }
        property bool negative { bool get(); }
        property UrhoBackend::Color^ effectiveColor { UrhoBackend::Color^ get(); }
        property float effectiveSpecularIntensity { float get(); }
// Methods
// Fields

        Urho3D::Light* light_;
    };
}
